(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),b=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=b(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=b(n),d=r,m=u["".concat(c,".").concat(d)]||u[d]||p[d]||i;return n?a.a.createElement(m,l(l({ref:t},s),{},{components:n})):a.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var s=2;s<i;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),i=(n(0),n(108)),c={id:"Meshing.SurfaceMeshing",title:"Meshing.SurfaceMeshing()",description:"Generate surface mesh to selected parts"},l={unversionedId:"components/Meshing.SurfaceMeshing",id:"components/Meshing.SurfaceMeshing",isDocsHomePage:!1,title:"Meshing.SurfaceMeshing()",description:"Generate surface mesh to selected parts",source:"@site/docs\\components\\Meshing.SurfaceMeshing.md",slug:"/components/Meshing.SurfaceMeshing",permalink:"/testweb/docs/components/Meshing.SurfaceMeshing",version:"current",sidebar:"docs",previous:{title:"Asynchronous Loading",permalink:"/testweb/docs/getting-started/async-loading"},next:{title:"Meshing.SetMeshAttribute()",permalink:"/testweb/docs/components/Meshing.SetMeshAttribute"}},o=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[{value:"<code>crlPart</code>",id:"crlpart",children:[]},{value:"<code>surfaceMesh</code>",id:"surfacemesh",children:[]},{value:"<code>bUseSetting</code>",id:"busesetting",children:[]},{value:"<code>bFMesher</code>",id:"bfmesher",children:[]},{value:"<code>iThreadNum</code>",id:"ithreadnum",children:[]},{value:"<code>bRefData</code>",id:"brefdata",children:[]},{value:"<code>bMeshColor</code>",id:"bmeshcolor",children:[]},{value:"<code>iPartColor</code>",id:"ipartcolor",children:[]}]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],s={toc:o};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"This command generates surface mesh to selected part . It will be used with ",Object(i.b)("em",{parentName:"p"},Object(i.b)("a",Object(r.a)({parentName:"em"},{href:"Meshing.SetMeshAttribute"}),"Meshing.SetMeshAttribute()"))," command. This function support triangular and quadrilateral element."),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Meshing.SurfaceMeshing(crlPart, surfaceMesh, bUseSetting=True, bFMesher=False,\n    iThreadNum=8, bRefData=True, bMeshColor=False, iPartColor=65280)\n")),Object(i.b)("p",null,"Macro: ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"Macro-Meshing-SurfaceMeshing2D"}),"Macro-Meshing-SurfaceMeshing2D()")),Object(i.b)("p",null,"Ribbon: {menuselection}",Object(i.b)("inlineCode",{parentName:"p"},"Meshing --\x3e Surface Meshing")),Object(i.b)("h2",{id:"inputs"},"Inputs"),Object(i.b)("h3",{id:"crlpart"},Object(i.b)("inlineCode",{parentName:"h3"},"crlPart")),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"Cursor List")," specifying the parts needed to create mesh."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"This is a required input.")),Object(i.b)("h3",{id:"surfacemesh"},Object(i.b)("inlineCode",{parentName:"h3"},"surfaceMesh")),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},Object(i.b)("a",Object(r.a)({parentName:"em"},{href:"SURFACE_MESH"}),"SURFACE_MESH"))," specifying the mesh parameter."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"This is a required input.")),Object(i.b)("h3",{id:"busesetting"},Object(i.b)("inlineCode",{parentName:"h3"},"bUseSetting")),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"Boolean")," to enable or disable the use of local setting. If this parameter is disabled (",Object(i.b)("em",{parentName:"p"},"False"),"), the existing local mesh setting will not be used."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The default value is ",Object(i.b)("em",{parentName:"li"},"True"),".")),Object(i.b)("h3",{id:"bfmesher"},Object(i.b)("inlineCode",{parentName:"h3"},"bFMesher")),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"Boolean")," to enable or disable the use of F-mesher. F-mesher is a mesher to create only Quad4 elements. If ",Object(i.b)("inlineCode",{parentName:"p"},"surfaceMesh")," is set to create Tri3 element, this options does not have any effect."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The default value is ",Object(i.b)("em",{parentName:"li"},"False"),".")),Object(i.b)("h3",{id:"ithreadnum"},Object(i.b)("inlineCode",{parentName:"h3"},"iThreadNum")),Object(i.b)("p",null,"An ",Object(i.b)("em",{parentName:"p"},"Integer")," specifying the number of CPU threads for parallel meshing. This mesher create parallel meshing for each independent (no assembled face) part on each thread. If 2 parts are assembled together, they will be treated as a single part for parallel meshing. This parameter must be smaller than the maximum number of CPU cores."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The default value is 8.")),Object(i.b)("h3",{id:"brefdata"},Object(i.b)("inlineCode",{parentName:"h3"},"bRefData")),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"Boolean")," to enable or disable the creating of Reference data. Reference data is used to store CAD model. If this parameter is enabled (",Object(i.b)("em",{parentName:"p"},"True"),"), Reference data will be kept after meshing."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The default value is ",Object(i.b)("em",{parentName:"li"},"True"),".")),Object(i.b)("h3",{id:"bmeshcolor"},Object(i.b)("inlineCode",{parentName:"h3"},"bMeshColor")),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"Boolean")," to enable or disable the use of mesh color. If this parameter is enabled (",Object(i.b)("em",{parentName:"p"},"True"),"), the result meshed parts will be colored as described by ",Object(i.b)("inlineCode",{parentName:"p"},"iPartColor"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The default value is ",Object(i.b)("em",{parentName:"li"},"False"),".")),Object(i.b)("h3",{id:"ipartcolor"},Object(i.b)("inlineCode",{parentName:"h3"},"iPartColor")),Object(i.b)("p",null,"An ",Object(i.b)("em",{parentName:"p"},"Integer")," specifying the color of result meshed parts."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The default value is 65280 (white).")),Object(i.b)("h2",{id:"return-code"},"Return Code"),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"String")," of 1 if success, or 0 if fail."),Object(i.b)("h2",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python",metastring:"{5-6}","{5-6}":!0}),"Geometry.Part.Cube()\nMeshing.SetMeshAttribute(crlPart=[Part(1)], surfaceMesh=SURFACE_MESH\n    (dGeomAngle=0.7853981634, iOptLevel=5, dAutoMergeTinyFacesAngle=0.5235987756,\n    bGeomApprox=True, iNextEntityOffsetId=0))\nMeshing.SurfaceMeshing(crlPart=[Part(1)], surfaceMesh=SURFACE_MESH(dGeomAngle=0.7853981634,\n    iOptLevel=5, dAutoMergeTinyFacesAngle=0.5235987756, bGeomApprox=True, iNextEntityOffsetId=0))\n")))}b.isMDXComponent=!0}}]);