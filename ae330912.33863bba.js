(window.webpackJsonp=window.webpackJsonp||[]).push([[880],{1441:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),d=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=d(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(r),b=n,m=p["".concat(i,".").concat(b)]||p[b]||u[b]||o;return r?a.a.createElement(m,c(c({ref:t},s),{},{components:r})):a.a.createElement(m,c({ref:t},s))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},959:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return d}));var n=r(3),a=r(7),o=(r(0),r(1441)),i={id:"JPT.GetSharedNodes",title:"JPT.GetSharedNodes()",author:"TechnoStar Co., Ltd.",author_url:"https://www.e-technostar.com/",description:"Get all information of the shared nodes"},c={unversionedId:"psj-utility/JPT.GetSharedNodes",id:"psj-utility/JPT.GetSharedNodes",isDocsHomePage:!1,title:"JPT.GetSharedNodes()",description:"Get all information of the shared nodes",source:"@site/docs\\psj-utility\\PSJ-Utility_GetSharedNodes.md",slug:"/psj-utility/JPT.GetSharedNodes",permalink:"/testweb/docs/psj-utility/JPT.GetSharedNodes",version:"current",sidebar:"api",previous:{title:"JPT.GetSharedFaces()",permalink:"/testweb/docs/psj-utility/JPT.GetSharedFaces"},next:{title:"JPT.GetUndoCount()",permalink:"/testweb/docs/psj-utility/JPT.GetUndoCount"}},l=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[{value:"<code>DItemVector</code>",id:"ditemvector",children:[]}]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],s={toc:l};function d(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"description"},"Description"),Object(o.b)("p",null,"Get all information of the shared nodes."),Object(o.b)("h2",{id:"syntax"},"Syntax"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"JPT.GetSharedNodes(DItemVector)\n")),Object(o.b)("h2",{id:"inputs"},"Inputs"),Object(o.b)("h3",{id:"ditemvector"},Object(o.b)("inlineCode",{parentName:"h3"},"DItemVector")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},Object(o.b)("a",Object(n.a)({parentName:"em"},{href:"DItemVector"}),"DItemVector"))," standing for a ",Object(o.b)("em",{parentName:"li"},"list")," of ",Object(o.b)("em",{parentName:"li"},Object(o.b)("a",Object(n.a)({parentName:"em"},{href:"./../data-type/psj-utility/built-in-types/DItem"}),"DItem"))," object in Jupiter."),Object(o.b)("li",{parentName:"ul"},"This is a required input.")),Object(o.b)("h2",{id:"return-code"},"Return Code"),Object(o.b)("p",null,"A ",Object(o.b)("em",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"em"},{href:"DItemVector"}),"DItemVector"))," standing for a ",Object(o.b)("em",{parentName:"p"},"list")," of shared nodes with their information."),Object(o.b)("h2",{id:"sample-code"},"Sample Code"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python",metastring:"{0,13}","{0,13}":!0}),'# Create sample parts\nGeometry.Part.Cube(iColorPart=6217822)\nGeometry.Part.Cube(dlOrigin=[0.01, 0.0, 0.0], strPartName="Cube_2", iColorPart=6908379)\nGeometry.Part.Cube(dlOrigin=[0.02, 0.0, 0.0], strPartName="Cube_3", iColorPart=7138924)\nGeometry.Part.Cube(dlOrigin=[0.03, 0.0, 0.0], strPartName="Cube_4", iColorPart=15753968)\n\n# Create shared faces\nJPT.Exec(\'AssembleFaceMatingStep([], [], [3:1, 3:2, 3:3, 3:4], 1e-05)\')\nJPT.Exec(\'AssembleFaceEx([49, 24, 50, 75, 101, 76], 1e-05, 0, 0)\')\n\n# Get the information of all shared nodes\nbodies = JPT.GetAllByType(JPT.DItemType.BODY)\nsharedNodes = JPT.GetSharedNodes(bodies)\nJPT.Debugger(sharedNodes)\n')))}d.isMDXComponent=!0}}]);