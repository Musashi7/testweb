(window.webpackJsonp=window.webpackJsonp||[]).push([[694],{1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=i.a.createContext({}),p=function(e){var t=i.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return i.a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),b=r,m=d["".concat(a,".").concat(b)]||d[b]||s[b]||o;return n?i.a.createElement(m,c(c({ref:t},u),{},{components:n})):i.a.createElement(m,c({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var u=2;u<o;u++)a[u]=n[u];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},773:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),i=n(7),o=(n(0),n(1441)),a={id:"ViewFindEntities",title:"ViewFindEntities",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/"},c={unversionedId:"macro/utility/ViewFindEntities",id:"macro/utility/ViewFindEntities",isDocsHomePage:!1,title:"ViewFindEntities",description:"Description",source:"@site/docs\\macro\\utility\\Macro-Utility-ViewFindEntities.md",slug:"/macro/utility/ViewFindEntities",permalink:"/testweb/docs/macro/utility/ViewFindEntities",version:"current",sidebar:"api",previous:{title:"FindMaxAreaFaceInPart",permalink:"/testweb/docs/macro/utility/FindMaxAreaFaceInPart"},next:{title:"EntityInfo",permalink:"/testweb/docs/macro/utility/EntityInfo"}},l=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],u={toc:l};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"description"},"Description"),Object(o.b)("p",null,"Find for entity"),Object(o.b)("h2",{id:"syntax"},"Syntax"),Object(o.b)("p",null,"ViewFindEntities(string strID/PartName/Coordinate, string strEntityType, bool bMatch)"),Object(o.b)("h2",{id:"inputs"},"Inputs"),Object(o.b)("p",null,"1",".","  String\nID, Coordinate or Part Name*"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),'*Entity ID of Part, Face, Edge, Vertex, 3D Element, 2D Element, 1D Element, Node, Group, Force, Pressure, Constraint, DoF Set, Centrifugal Force, Gravity, Connection, Contact or Coordinate\n\n\u2002Coordinate: "Position of X coordinate, Position of Y coordinate, Position of Z coordinate"\n\n\u2002Part Name: String of part name\n')),Object(o.b)("p",null,"2",".","  String\nTarget entity name (ID/Coordinate/Part Name)*"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"*Entity ID name: Part, Face, Edge, Vertex, 3D Element, 2D Element, 1D Element, Node, Group, Force, Pressure, Constraint, DoF Set, Centrifugal Force, Gravity, Connection, Contact or Coordinate\n\n\u2002Coordinate: Part, Face, Edge, 3D Element, 2D Element, 1D Element, Node\n\n\u2002Part Name: Part\n")),Object(o.b)("p",null,"3",".","  Bool\nMatch bool flag True = 1, False = 0"),Object(o.b)("h2",{id:"return-code"},"Return Code"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"1")," - The function is executed correctly."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"0")," - Cannot execute."),Object(o.b)("h2",{id:"sample-code"},"Sample Code"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'ViewFindEntities("Cube_1","Part",0) or ViewFindEntities("1","Part",0) or ViewFindEntities("0.00555,0.01,0.005555","Part",0)\n\n')))}p.isMDXComponent=!0}}]);