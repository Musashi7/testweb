(window.webpackJsonp=window.webpackJsonp||[]).push([[790],{1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),s=p(n),d=r,m=s["".concat(u,".").concat(d)]||s[d]||b[d]||i;return n?o.a.createElement(m,a(a({ref:t},l),{},{components:n})):o.a.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,u=new Array(i);u[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,u[1]=a;for(var l=2;l<i;l++)u[l]=n[l];return o.a.createElement.apply(null,u)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},869:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return u})),n.d(t,"metadata",(function(){return a})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),i=(n(0),n(1441)),u={id:"JPT.ConvertValueToDocUnit",title:"JPT.ConvertValueToDocUnit()",author:"TechnoStar Co., Ltd.",author_url:"https://www.e-technostar.com/",description:"Convert the inputted value from SI[m] units (Jupiter macro units) to the current Jupiter unit system"},a={unversionedId:"psj-utility/JPT.ConvertValueToDocUnit",id:"psj-utility/JPT.ConvertValueToDocUnit",isDocsHomePage:!1,title:"JPT.ConvertValueToDocUnit()",description:"Convert the inputted value from SI\\[m\\] units (Jupiter macro units) to the current Jupiter unit system",source:"@site/docs\\psj-utility\\PSJ-Utility_ConvertValueToDocUnit.md",slug:"/psj-utility/JPT.ConvertValueToDocUnit",permalink:"/testweb/docs/psj-utility/JPT.ConvertValueToDocUnit",version:"current",sidebar:"api",previous:{title:"JPT.ConvertRGBToJPTColor()",permalink:"/testweb/docs/psj-utility/JPT.ConvertRGBToJPTColor"},next:{title:"JPT.ConvertValueToMacroUnit()",permalink:"/testweb/docs/psj-utility/JPT.ConvertValueToMacroUnit"}},c=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[{value:"<code>inputValue</code>",id:"inputvalue",children:[]},{value:"<code>unitType</code>",id:"unittype",children:[]}]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],l={toc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"Convert the inputted value from SI","[","m","]"," units (Jupiter macro units) to the current Jupiter unit system."),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"JPT.ConvertValueToDocUnit(inputValue, unitType)\n")),Object(i.b)("h2",{id:"inputs"},"Inputs"),Object(i.b)("h3",{id:"inputvalue"},Object(i.b)("inlineCode",{parentName:"h3"},"inputValue")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The value which will be used for converting."),Object(i.b)("li",{parentName:"ul"},"This is a required input.")),Object(i.b)("h3",{id:"unittype"},Object(i.b)("inlineCode",{parentName:"h3"},"unitType")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Type of the unit which will be used as the reference for converting."),Object(i.b)("li",{parentName:"ul"},"The type of unit can be found at: {menuselection}",Object(i.b)("inlineCode",{parentName:"li"},"Home --\x3e Preference --\x3e Unit")),Object(i.b)("li",{parentName:"ul"},"This is a required input.")),Object(i.b)("h2",{id:"return-code"},"Return Code"),Object(i.b)("p",null,"A converted Value (",Object(i.b)("em",{parentName:"p"},"Float")," type)."),Object(i.b)("h2",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python",metastring:"{0, 2}","{0,":!0,"2}":!0}),"# Convert 1m in Jupiter macro unit system to the current unit system of Jupiter\nconvToDoc = JPT.ConvertValueToDocUnit(1, JPT.UnitType.Unit_Length)\nJPT.Debugger(convToDoc)\n")))}p.isMDXComponent=!0}}]);