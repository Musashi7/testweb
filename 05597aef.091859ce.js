(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{1441:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return d}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=o.a.createContext({}),u=function(e){var n=o.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=u(e.components);return o.a.createElement(p.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=u(t),m=r,d=s["".concat(i,".").concat(m)]||s[m]||b[m]||a;return t?o.a.createElement(d,c(c({ref:n},p),{},{components:t})):o.a.createElement(d,c({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},97:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return u}));var r=t(3),o=t(7),a=(t(0),t(1441)),i={id:"Imprint_PlanarLine",title:"Imprint_PlanarLine",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/"},c={unversionedId:"macro/geometry/Imprint_PlanarLine",id:"macro/geometry/Imprint_PlanarLine",isDocsHomePage:!1,title:"Imprint_PlanarLine",description:"Description",source:"@site/docs\\macro\\geometry\\Macro-Geometry-Imprint-PlanarLine.md",slug:"/macro/geometry/Imprint_PlanarLine",permalink:"/testweb/docs/macro/geometry/Imprint_PlanarLine",version:"current",sidebar:"api",previous:{title:"MakeFacePlanar",permalink:"/testweb/docs/macro/geometry/MakeFacePlanar"},next:{title:"Imprint_ProjectionLine",permalink:"/testweb/docs/macro/geometry/Imprint_ProjectionLine"}},l=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],p={toc:l};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"description"},"Description"),Object(a.b)("p",null,"Create imprint Planar line"),Object(a.b)("h2",{id:"syntax"},"Syntax"),Object(a.b)("p",null,"Imprint_PlanarLine(double[] Point_xyz, int[] FaceID,Cursor Coordinate, int PlaneType,bool BreakFace,Cursor[] BodyCursor)"),Object(a.b)("h2",{id:"inputs"},"Inputs"),Object(a.b)("p",null,"1",".","  double[]\nPoint xyz [","[x1,y1,z1]","]"),Object(a.b)("p",null,"2",".","  int[]\nFace ID"),Object(a.b)("p",null,"3",".","  Cursor\nCoordinate System (","[0:0]","=Global)"),Object(a.b)("p",null,"4",".","  int\nPlane Type (YZ=0,ZX=1,XY=2,3Points=3)"),Object(a.b)("p",null,"5",".","  bool\nFlag Break Face true = 1,false=0"),Object(a.b)("p",null,"6",".","  Cursor[]\nBody Cursor(","[3:*]","*=Body ID)"),Object(a.b)("h2",{id:"return-code"},"Return Code"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"1")," - The function is executed correctly."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"0")," - Cannot execute."),Object(a.b)("h2",{id:"sample-code"},"Sample Code"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Imprint_PlanarLine([[0.005, 0.0111111, 0.00866025]], [5], 0:0, 1, 1, [3:1])\n")))}u.isMDXComponent=!0}}]);