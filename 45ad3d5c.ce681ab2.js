(window.webpackJsonp=window.webpackJsonp||[]).push([[366],{1441:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return d}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=o.a.createContext({}),p=function(e){var t=o.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=p(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(r),m=n,d=l["".concat(i,".").concat(m)]||l[m]||b[m]||a;return r?o.a.createElement(d,c(c({ref:t},u),{},{components:r})):o.a.createElement(d,c({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var u=2;u<a;u++)i[u]=r[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},442:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return p}));var n=r(3),o=r(7),a=(r(0),r(1441)),i={id:"JPT.MacroListTCursorToListDItem",title:"JPT.MacroListTCursorToListDItem()",author:"TechnoStar Co., Ltd.",author_url:"https://www.e-technostar.com/",description:"Convert a cursor list (Macro string type) to a DItemVector"},c={unversionedId:"psj-utility/JPT.MacroListTCursorToListDItem",id:"psj-utility/JPT.MacroListTCursorToListDItem",isDocsHomePage:!1,title:"JPT.MacroListTCursorToListDItem()",description:"Convert a cursor list (Macro string type) to a DItemVector",source:"@site/docs\\psj-utility\\PSJ-Utility_MacroListTCursorToListDItem.md",slug:"/psj-utility/JPT.MacroListTCursorToListDItem",permalink:"/testweb/docs/psj-utility/JPT.MacroListTCursorToListDItem",version:"current",sidebar:"api",previous:{title:"JPT.DTVector3dToMacroVector()",permalink:"/testweb/docs/psj-utility/JPT.DTVector3dToMacroVector"},next:{title:"JPT.MacroTCursorToDItem()",permalink:"/testweb/docs/psj-utility/JPT.MacroTCursorToDItem"}},s=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[{value:"<code>cursorList</code>",id:"cursorlist",children:[]}]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],u={toc:s};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"description"},"Description"),Object(a.b)("p",null,"Convert a cursor list (Macro string type) to a ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",Object(n.a)({parentName:"em"},{href:"DItemVector"}),"DItemVector")),"."),Object(a.b)("h2",{id:"syntax"},"Syntax"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"JPT.MacroListTCursorToListDItem(cursorList)\n")),Object(a.b)("h2",{id:"inputs"},"Inputs"),Object(a.b)("h3",{id:"cursorlist"},Object(a.b)("inlineCode",{parentName:"h3"},"cursorList")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A ",Object(a.b)("em",{parentName:"li"},"string")," standing for the cursor list (Macro string type)."),Object(a.b)("li",{parentName:"ul"},"This is a required input.")),Object(a.b)("h2",{id:"return-code"},"Return Code"),Object(a.b)("p",null,"A ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",Object(n.a)({parentName:"em"},{href:"DItemVector"}),"DItemVector"))," object standing for a ",Object(a.b)("em",{parentName:"p"},"list")," of ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",Object(n.a)({parentName:"em"},{href:"./../data-type/psj-utility/built-in-types/DItem"}),"DItem"))," object."),Object(a.b)("h2",{id:"sample-code"},"Sample Code"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python",metastring:"{0,5}","{0,5}":!0}),'# Convert a cursor list (Macro string type) to a DItemVector\ninputValue1 = "10:1"\ninputValue2 = "10:2"\ninputValue3 = "10:3"\nJPT.Debugger(JPT.MacroListTCursorToListDItem(f"[{inputValue1}, {inputValue2}, {inputValue3}]"))\n')))}p.isMDXComponent=!0}}]);