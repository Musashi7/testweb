(window.webpackJsonp=window.webpackJsonp||[]).push([[495],{1441:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},b=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=p(a),d=n,m=b["".concat(i,".").concat(d)]||b[d]||u[d]||l;return a?r.a.createElement(m,o(o({ref:t},c),{},{components:a})):r.a.createElement(m,o({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},571:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return s})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),l=(a(0),a(1441)),i={id:"Analysis.TSSolver.SteadyStateHeatTransfer",title:"Analysis.TSSolver.SteadyStateHeatTransfer()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Export TechnoStar Steady State Heat Transfer solver file (SOL 153)"},o={unversionedId:"psj-command/analysis/Analysis.TSSolver.SteadyStateHeatTransfer",id:"psj-command/analysis/Analysis.TSSolver.SteadyStateHeatTransfer",isDocsHomePage:!1,title:"Analysis.TSSolver.SteadyStateHeatTransfer()",description:"Export TechnoStar Steady State Heat Transfer solver file (SOL 153)",source:"@site/docs\\psj-command\\analysis\\Analysis.TSSolver.SteadyStateHeatTransfer.md",slug:"/psj-command/analysis/Analysis.TSSolver.SteadyStateHeatTransfer",permalink:"/testweb/docs/psj-command/analysis/Analysis.TSSolver.SteadyStateHeatTransfer",version:"current",sidebar:"api",previous:{title:"Analysis.TSSolver.NormalModes()",permalink:"/testweb/docs/psj-command/analysis/Analysis.TSSolver.NormalModes"},next:{title:"Analysis.TSSolver.TransientHeatTransfer()",permalink:"/testweb/docs/psj-command/analysis/Analysis.TSSolver.TransientHeatTransfer"}},s=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],c={toc:s};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"description"},"Description"),Object(l.b)("p",null,"This method exports the Input Deck for TechnoStar Steady State Heat Transfer analysis (SOL 153)."),Object(l.b)("h2",{id:"syntax"},"Syntax"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'Analysis.TSSolver.SteadyStateHeatTransfer(strName="", strDescription="", crlTarget=[],\n    nastranAnalysis=NASTRAN_ANALYSIS(), crEdit=None, strPath="")\n')),Object(l.b)("p",null,"Macro: {ref}",Object(l.b)("inlineCode",{parentName:"p"},"Macro-Analysis-TSSolver-SteadyStateHeatTransfer")),Object(l.b)("p",null,"Ribbon: {menuselection}",Object(l.b)("inlineCode",{parentName:"p"},"Analysis --\x3e TS-Solver --\x3e Steady State Heat Transfer(SOL 153)")),Object(l.b)("h2",{id:"inputs"},"Inputs"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"strName")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"A ",Object(l.b)("em",{parentName:"li"},"String")," specifying the job name of TechnoStar solver. Output set by this name will be saved in the Assembly tree."),Object(l.b)("li",{parentName:"ul"},'The default value is "Job_1".')),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"strDescription")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"A ",Object(l.b)("em",{parentName:"li"},"String")," specifying the description of TechnoStar solver job."),Object(l.b)("li",{parentName:"ul"},'The default value is "".')),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"crlTarget")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"A ",Object(l.b)("em",{parentName:"li"},"Cursor List")," specifying the list of target part."),Object(l.b)("li",{parentName:"ul"},"The default value is [] (all parts in the model).")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"nastranAnalysis")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"A ",Object(l.b)("em",{parentName:"li"},"Nastran Analysis")," specifying the TechnoStar solver input parameter.")),Object(l.b)("p",null,": The default value is ",Object(l.b)("em",{parentName:"p"},"[NASTRAN_ANALYSIS`()"),".](NASTRAN",Object(l.b)("em",{parentName:"p"},"ANALYSIS`()"),".): The default value is ",Object(l.b)("em",{parentName:"p"},"{ref}",Object(l.b)("inlineCode",{parentName:"em"},"NASTRAN_ANALYSIS"),"()"),"."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"crEdit")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"A ",Object(l.b)("em",{parentName:"li"},"Cursor")," specifying the created TechnoStar solver job. If this parameter is used, the value will be DynamisJob(",Object(l.b)("em",{parentName:"li"},"ID"),"), where ",Object(l.b)("em",{parentName:"li"},"ID")," is the ID of the solver job had been created. If it is left ",Object(l.b)("em",{parentName:"li"},"None"),", a new TechnoStar solver job will be created."),Object(l.b)("li",{parentName:"ul"},"The default value is ",Object(l.b)("em",{parentName:"li"},"None"),".")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"strPath")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"A ",Object(l.b)("em",{parentName:"li"},"String")," specifying the export location for bdf file."),Object(l.b)("li",{parentName:"ul"},"This is a required input.")),Object(l.b)("h2",{id:"return-code"},"Return Code"),Object(l.b)("p",null,"A ",Object(l.b)("em",{parentName:"p"},"String")," of 1 if success, or 0 if fail."),Object(l.b)("h2",{id:"sample-code"},"Sample Code"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'Geometry.Part.Cube(iColorPart=12603072)\nMeshing.SolidMeshing(crlPart=[Part(1)], bTet10=True, dGradingFactor=1.05,\n    dStretchLimit=0.1, iSpeedVsQual=1, iRegion=1, bSafeMode=False,\n    iParallel=12, bInternalMeshOnly=False, iPartColor=65280)\n\nProperties.Material.Add("Structural_Steel", [Density([(DENSITY, 7.849999999999999e-09)]),\n    Elastic([(YOUNGS_MODULUS, 200000.0), (POISSONS_RATIO, 0.3)])])\nProperties.Solid(crMaterial=Material(1),dDynaRemeshVal1=DFLT_DBL,\n    dDynaRemeshVal2=DFLT_DBL, dDispHG=DFLT_DBL, crlTarget=[Part(1)], iFLG=-1)\n\nBoundaryConditions.BoundaryTemperature.Constant(dFTemp=373.15, crlTarget=[Face(24)])\nBoundaryConditions.HeatFlux.SurfaceFlux(strName="SurfaceHeatFlux1", dFflux=150000.0,\n    iDistributionMethod=1, crTable=None, crlTarget=[Face(23)])\n\ninput_param = NASTRAN_ANALYSIS(iSolverType=3, iGridFormatType=1, bUseCASI=True, dEpsilon=1e-13,\n    iMaxNumOfIter=500, iMemory=1024, iSolNo=153,\n    nastranOutputRequest=NASTRAN_OUTPUT_REQUEST(iTypeThermal=1, iTypeFlux=6))\nAnalysis.TSSolver.SteadyStateHeatTransfer(nastranAnalysis= input_param, strPath="C:/temp/Job_1.bdf")\n\n\n')))}p.isMDXComponent=!0}}]);