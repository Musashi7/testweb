(window.webpackJsonp=window.webpackJsonp||[]).push([[393],{1441:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var a=t(0),o=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var b=o.a.createContext({}),u=function(e){var n=o.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=u(e.components);return o.a.createElement(b.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},s=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),p=u(t),s=a,m=p["".concat(r,".").concat(s)]||p[s]||d[s]||i;return t?o.a.createElement(m,c(c({ref:n},b),{},{components:t})):o.a.createElement(m,c({ref:n},b))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=s;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var b=2;b<i;b++)r[b]=t[b];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},469:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return u}));var a=t(3),o=t(7),i=(t(0),t(1441)),r={id:"BoundaryConditions.Convection.Constant",title:"BoundaryConditions.Convection.Constant()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Create natural convection load to face, element, group"},c={unversionedId:"psj-command/boundary-conditions/BoundaryConditions.Convection.Constant",id:"psj-command/boundary-conditions/BoundaryConditions.Convection.Constant",isDocsHomePage:!1,title:"BoundaryConditions.Convection.Constant()",description:"Create natural convection load to face, element, group",source:"@site/docs\\psj-command\\boundary-conditions\\BoundaryConditions.Convection.Constant.md",slug:"/psj-command/boundary-conditions/BoundaryConditions.Convection.Constant",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.Convection.Constant",version:"current",sidebar:"api",previous:{title:"BoundaryConditions.BoundaryTemperature.SurfaceMapping()",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.BoundaryTemperature.SurfaceMapping"},next:{title:"BoundaryConditions.Convection.SurfaceMapping()",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.Convection.SurfaceMapping"}},l=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],b={toc:l};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"This method creates natural convection condition on selected face, element or group. User inputs external temperature and convection coefficient in scalar or in a table format, and it will return convection load to the specified location."),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'BoundaryConditions.Convection.Constant(strName="Convection_1",\n    dExternalTemp=DFLT_DBL, crTableTimeTemp=None, dConvectionCoef=DFLT_DBL,\n    crTableTimeCoeff=None, crTableTempCoeff=None, crlTarget=[], crEdit=None)\n')),Object(i.b)("p",null,"Macro: {ref}",Object(i.b)("inlineCode",{parentName:"p"},"Macro-BoundaryConditions-Convection")),Object(i.b)("p",null,"Ribbon: {menuselection}",Object(i.b)("inlineCode",{parentName:"p"},"Boundary Conditions --\x3e Convection --\x3e Constant")),Object(i.b)("h2",{id:"inputs"},"Inputs"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"strName")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"String")," specifying the name of convection setting."),Object(i.b)("li",{parentName:"ul"},'The default value is "Convection_1".')),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"dExternalTemp")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the external temperature (default unit: degree K)."),Object(i.b)("li",{parentName:"ul"},"This is a required input.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crTableTimeTemp")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor")," specifying the table of dependency between time and external temperature. This table can be created using ",Object(i.b)("em",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"BoundaryConditions.FieldData"}),"BoundaryConditions.FieldData")),"."),Object(i.b)("li",{parentName:"ul"},"The default value is ",Object(i.b)("em",{parentName:"li"},"None"),".")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"dConvectionCoef")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the convection coefficient (default unit: W/m^2","*","K)."),Object(i.b)("li",{parentName:"ul"},"This is a required input.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crTableTimeCoeff")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor")," specifying the table of dependency between time and convection coefficient. This table can be created using ",Object(i.b)("em",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"BoundaryConditions.FieldData"}),"BoundaryConditions.FieldData")),"."),Object(i.b)("li",{parentName:"ul"},"The default value is ",Object(i.b)("em",{parentName:"li"},"None"),".")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crTableTempCoeff")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor")," specifying the table of dependency between temperature and convection coefficient. This table can be created using ",Object(i.b)("em",{parentName:"li"},Object(i.b)("a",Object(a.a)({parentName:"em"},{href:"BoundaryConditions.FieldData"}),"BoundaryConditions.FieldData")),"."),Object(i.b)("li",{parentName:"ul"},"The default value is ",Object(i.b)("em",{parentName:"li"},"None"),".")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crlTarget")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor List")," specifying the list of targets for convection boundary condition. Target can be face, element or group."),Object(i.b)("li",{parentName:"ul"},"This is a required input.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crEdit")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor")," specifying an existing convection setting (constant). If this parameter is used, the specified convection setting (constant) will be modified. If it is left ",Object(i.b)("em",{parentName:"li"},"None"),", a new convection setting (constant) will be created."),Object(i.b)("li",{parentName:"ul"},"The default value is ",Object(i.b)("em",{parentName:"li"},"None"),".")),Object(i.b)("h2",{id:"return-code"},"Return Code"),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"String")," of 1 if success, or 0 if fail."),Object(i.b)("h2",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'Geometry.Part.Cube()\nBoundaryConditions.Convection.Constant(strName="Convection_26",\n    dExternalTemp=373.15, dConvectionCoef=1E-3, crlTarget=[Face(26)])\n\n')))}u.isMDXComponent=!0}}]);