(window.webpackJsonp=window.webpackJsonp||[]).push([[1105],{1184:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return d}));var r=n(3),i=n(7),a=(n(0),n(1441)),o={id:"Geometry.Edge.ExtendLine",title:"Geometry.Edge.ExtendLine()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Extend Edge entity"},c={unversionedId:"psj-command/geometry/Geometry.Edge.ExtendLine",id:"psj-command/geometry/Geometry.Edge.ExtendLine",isDocsHomePage:!1,title:"Geometry.Edge.ExtendLine()",description:"Extend Edge entity",source:"@site/docs\\psj-command\\geometry\\Geometry.Edge.ExtendLine.md",slug:"/psj-command/geometry/Geometry.Edge.ExtendLine",permalink:"/testweb/docs/psj-command/geometry/Geometry.Edge.ExtendLine",version:"current",sidebar:"api",previous:{title:"Geometry.Edge.ElementEdges()",permalink:"/testweb/docs/psj-command/geometry/Geometry.Edge.ElementEdges"},next:{title:"Geometry.Edge.IntersectionLine()",permalink:"/testweb/docs/psj-command/geometry/Geometry.Edge.IntersectionLine"}},l=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],b={toc:l};function d(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"description"},"Description"),Object(a.b)("p",null,"This method extends the given edges to meet another object."),Object(a.b)("h2",{id:"syntax"},"Syntax"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Geometry.Edge.ExtendLine(crlEdge, iMethod=0, iEnd=0, iNoFittingPoints=3, iDiv=2, iEnableBreakFace=1)\n")),Object(a.b)("p",null,"Macro: {ref}",Object(a.b)("inlineCode",{parentName:"p"},"Macro-Geometry-ImprintExtendLine")),Object(a.b)("p",null,"Ribbon: {menuselection}",Object(a.b)("inlineCode",{parentName:"p"},"Geometry --\x3e Edge --\x3e Extend Line")),Object(a.b)("h2",{id:"inputs"},"Inputs"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"crlEdge")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A ",Object(a.b)("em",{parentName:"li"},"List of Cursor")," specifying an edge to be extended.."),Object(a.b)("li",{parentName:"ul"},"This is a required input.")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"iMethod")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"An ",Object(a.b)("em",{parentName:"li"},"Integer")," specifying the Extend method."),Object(a.b)("li",{parentName:"ul"},"If ",Object(a.b)("em",{parentName:"li"},"iMethod = 0"),", following the direction of the last segments of the given Edge."),Object(a.b)("li",{parentName:"ul"},"If ",Object(a.b)("em",{parentName:"li"},"iMethod = 1"),", attempting to retain the curvature direction of the given Edge."),Object(a.b)("li",{parentName:"ul"},"The default value is 0.")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"iEnd")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"An ",Object(a.b)("em",{parentName:"li"},"Integer")," specifying the end position to extend the Edge."),Object(a.b)("li",{parentName:"ul"},"If ",Object(a.b)("em",{parentName:"li"},"iEnd=0"),", extend from its endpoints to the closest Edge."),Object(a.b)("li",{parentName:"ul"},"If ",Object(a.b)("em",{parentName:"li"},"iEnd=1"),", extend the given Edge to boundary Edges ."),Object(a.b)("li",{parentName:"ul"},"The default value is 0.")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"iNoFittingPoints")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"An ",Object(a.b)("em",{parentName:"li"},"Integer")," specifying number of fitting points. This argument is to be used when the ",Object(a.b)("em",{parentName:"li"},"iMethod=1"),"."),Object(a.b)("li",{parentName:"ul"},"The default value is 3.")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"iDiv")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"An ",Object(a.b)("em",{parentName:"li"},"Integer")," specifying division segments. This argument is to be used when the ",Object(a.b)("em",{parentName:"li"},"iMethod=1"),"."),Object(a.b)("li",{parentName:"ul"},"The default value is 2.")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"iEnableBreakFace")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"An ",Object(a.b)("em",{parentName:"li"},"Integer")," specifying whether to break the face which the given edge lies on. Possible values are 0 and 1."),Object(a.b)("li",{parentName:"ul"},"The default value is 1.")),Object(a.b)("h2",{id:"return-code"},"Return Code"),Object(a.b)("p",null,"A ",Object(a.b)("em",{parentName:"p"},"String")," of 1 if success, or 0 if fail."),Object(a.b)("h2",{id:"sample-code"},"Sample Code"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Geometry.Part.Cube(iColorPart=6215639)\n\nGeometry.Edge.ElementEdges(crplElemEdge=[CursorPair(Node(453), Node(461))])\n\nGeometry.Edge.ExtendLine(crlEdge=[Edge(27)], iEnd=1)\n\n")))}d.isMDXComponent=!0},1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return s}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var b=i.a.createContext({}),d=function(e){var t=i.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=d(e.components);return i.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),p=d(n),u=r,s=p["".concat(o,".").concat(u)]||p[u]||m[u]||a;return n?i.a.createElement(s,c(c({ref:t},b),{},{components:n})):i.a.createElement(s,c({ref:t},b))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var b=2;b<a;b++)o[b]=n[b];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);