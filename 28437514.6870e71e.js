(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=s(n),u=r,d=b["".concat(l,".").concat(u)]||b[u]||m[u]||i;return n?a.a.createElement(d,o(o({ref:t},p),{},{components:n})):a.a.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},286:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),i=(n(0),n(1441)),l={id:"Meshing.Templates.TemplateCopy",title:"Meshing.Templates.TemplateCopy()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Template Copy local setting"},o={unversionedId:"psj-command/meshing/Meshing.Templates.TemplateCopy",id:"psj-command/meshing/Meshing.Templates.TemplateCopy",isDocsHomePage:!1,title:"Meshing.Templates.TemplateCopy()",description:"Template Copy local setting",source:"@site/docs\\psj-command\\meshing\\Meshing.Templates.TemplateCopy.md",slug:"/psj-command/meshing/Meshing.Templates.TemplateCopy",permalink:"/testweb/docs/psj-command/meshing/Meshing.Templates.TemplateCopy",version:"current",sidebar:"api",previous:{title:"Meshing.SurfaceMeshing()",permalink:"/testweb/docs/psj-command/meshing/Meshing.SurfaceMeshing"},next:{title:"MidPlane.AdjustThickness()",permalink:"/testweb/docs/psj-command/midplane/MidPlane.AdjustThickness"}},c=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],p={toc:c};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"This function can copy local mesh setting from Master to Slave "),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'Meshing.Templates.TemplateCopy(crlReferent, crlTarget, iMethod=0, iCopySub=1, dTolerance=0.001, strSource="", strTarget="")\n')),Object(i.b)("p",null,"Macro: {ref}",Object(i.b)("inlineCode",{parentName:"p"},"Macro-Meshing-TemplateCopy")),Object(i.b)("p",null,"Ribbon: {menuselection}",Object(i.b)("inlineCode",{parentName:"p"},"Meshing --\x3e Templates --\x3e TemplateCopy")),Object(i.b)("h2",{id:"inputs"},"Inputs"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"crlReferent"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor List")," specifying the reference item (a Face or a Part). The local mesh setting set on this reference item will be copied. This is a required input.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"crlTarget"))),Object(i.b)("p",null,": A ",Object(i.b)("em",{parentName:"p"},"Cursor List")," specifying the target item (a Face or a Part). The local mesh setting copied from reference item will be set on this target item if the two items are similar. Similarity conditions base on the selected ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"iMethod")),". This is a required input."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"iMethod"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"An ",Object(i.b)("em",{parentName:"li"},"Integer")," specifying the method for similarity conditions."),Object(i.b)("li",{parentName:"ul"},"If iMethod = 0: By Shape position: the two items are similar if their shape sizes are the same."),Object(i.b)("li",{parentName:"ul"},"If iMethod = 1: By topology: the two items are similar if their topology classifications are the same."),Object(i.b)("li",{parentName:"ul"},"The default value is 0.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"iCopySub"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"An ",Object(i.b)("em",{parentName:"li"},"Integer")," to enable or disable the copy of local mesh setting on sub-items."),Object(i.b)("li",{parentName:"ul"},"If selected target is Part, local mesh settings on Faces and Edges will be copied."),Object(i.b)("li",{parentName:"ul"},"If selected target is Face, local mesh settings on Edges will be copied."),Object(i.b)("li",{parentName:"ul"},"The default value is 1.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"dTolerance"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the tolerance distance for similarity test. The default value is 0.001.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"strSource"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"String"),' specifying the name of the Jupiter doc to copy. The default value is "".')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"strTarget"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"String"),' specifying the name of the Jupiter doc to paste. The default value is "".')),Object(i.b)("h2",{id:"return-code"},"Return Code"),Object(i.b)("p",null,"An ",Object(i.b)("em",{parentName:"p"},"String")," of 1 if successed, or 0 if failed."),Object(i.b)("h2",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'Geometry.Part.Cube(iColorPart=12999622)\nGeometry.MakeFillet(crlEdge=[Edge(18, 19, 15)])\nMeshing.LocalSettings.Face(strName="MeshParam_1", localMesh=LOCAL_MESH(iEntityType=2, bEnableSizeParams=True, dAvgElemSize=0.002, dMaxElemSize=0.01, dMinElemSize=0.001, bEnableMeshPattern=True, iMeshPatternType=1), crlTarget=[Face(27, 28, 29)])\nGeometry.Part.Cube(strPartName="Cube_2", iColorPart=7731705)\nGeometry.MakeFillet(crlEdge=[Edge(93, 90, 94)])\nMeshing.Templates.TemplateCopy(crlReferent=[Part(1)], crlTarget=[Part(2)], dTolerance=1e-06)\n\n')),Object(i.b)("p",null,"example of window to window case"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'Geometry.Part.Cube()\nGeometry.MakeFillet(crlEdge=[Edge(18, 19, 15)])\nMeshing.Templates.TemplateCopy(dTolerance=1e-06, strSource="Jupiter2", strTarget="Jupiter1")\n')),Object(i.b)("p",null,"Jupiter2 has same part with local mesh setting"))}s.isMDXComponent=!0}}]);