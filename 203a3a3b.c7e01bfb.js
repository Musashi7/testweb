(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),b=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=b(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(n),u=r,m=p["".concat(o,".").concat(u)]||p[u]||d[u]||i;return n?a.a.createElement(m,l(l({ref:t},s),{},{components:n})):a.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},243:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),i=(n(0),n(1441)),o={id:"Meshing.LocalSettings.Part",title:"Meshing.LocalSettings.Part()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"LocalSettings.Part"},l={unversionedId:"psj-command/meshing/Meshing.LocalSettings.Part",id:"psj-command/meshing/Meshing.LocalSettings.Part",isDocsHomePage:!1,title:"Meshing.LocalSettings.Part()",description:"LocalSettings.Part",source:"@site/docs\\psj-command\\meshing\\Meshing.LocalSettings.Part.md",slug:"/psj-command/meshing/Meshing.LocalSettings.Part",permalink:"/testweb/docs/psj-command/meshing/Meshing.LocalSettings.Part",version:"current",sidebar:"api",previous:{title:"Meshing.LocalSettings.Model()",permalink:"/testweb/docs/psj-command/meshing/Meshing.LocalSettings.Model"},next:{title:"Meshing.LocalSettings.Points()",permalink:"/testweb/docs/psj-command/meshing/Meshing.LocalSettings.Points"}},c=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],s={toc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"Set the mesh size unit of the parts. Define the settings before surface mesh creation to whole model.\nConfiguration of the mesh size will be applied."),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Meshing.LocalSettings.Part(strName, localMesh, crlTarget=[], ilHardPointId=[], veclHardPointXYZ=[], crlHardPointTarget=[], crEditTarget=None)\n")),Object(i.b)("p",null,"Macro: {ref}",Object(i.b)("inlineCode",{parentName:"p"},"Macro-Meshing-CreateLocalSetting_Part")),Object(i.b)("p",null,"Ribbon: {menuselection}",Object(i.b)("inlineCode",{parentName:"p"},"Meshing --\x3e LocalSettings --\x3e Part")),Object(i.b)("h2",{id:"inputs"},"Inputs"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"strName"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"String")," specifying the name of the local mesh setting. This is a required input.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"localMesh"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},Object(i.b)("a",Object(r.a)({parentName:"em"},{href:"LOCAL_MESH"}),"LOCAL_MESH"))," specifying the local mesh setting's parameter. This is a required input.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"crlTarget"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor List")," specifying the target Parts of the local mesh setting. If hard point is needed, this parameter should be []. Instead, enter target in ",Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"crlHardPointTarget")),". The default value is [].")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"ilHardPointId"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Integer List")," specifying the list of hard points' ID. The default value is [].")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"veclHardPointXYZ"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Vector List")," specifying the list of hard points' position in terms of x, y, z. The default value is [].")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"crlHardPointTarget"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor List")," specifying the list of hard points' target Part. The default value is [].")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"crEditTarget"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor")," specifying an existed local mesh setting Point. When this parameter is used, the specified local mesh setting Point will be overwritten. When it is not used, a new local mesh setting Point will be created. The default value is None.")),Object(i.b)("h2",{id:"return-code"},"Return Code"),Object(i.b)("p",null,"An ",Object(i.b)("em",{parentName:"p"},"String")," of 1 if successed, or 0 if failed."),Object(i.b)("h2",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'Geometry.Part.Cube()\n\nGeometry.Part.Cube(dlOrigin=[0.0, 0.01, 0.0], strPartName="Cube_2", iColorPart=6409934)\n\nMeshing.LocalSettings.Part(strName="MeshParam_1", localMesh=LOCAL_MESH(iEntityType=1, bEnableSizeParams=True, dAvgElemSize=0.002, dMaxElemSize=0.01, dMinElemSize=0.001), crlTarget=[Part(1)])\nMeshEdit.CreateNode.Absolute(veclNodeCoord=[[0.001, 0.001, 0.001]], ilNewNodeID=[977])\nMeshing.LocalSettings.Part(strName="MeshParam_2", localMesh=LOCAL_MESH(iEntityType=10, dAvgElemSize=0.002, dMaxElemSize=0.01, dMinElemSize=0.001), ilHardPointId=[0], veclHardPointXYZ=[[0.001, 0.001, 0.001]], crlHardPointTarget=[Part(1)])\n\nGeometry.FCircleAdjustVertex(crlPart=[Part(1, 2)])\nMeshing.SetMeshAttribute(crlPart=[Part(1, 2)], surfaceMesh=SURFACE_MESH(dMaxElemSize=0.015, dMinElemSize=0.0005, dGeomAngle=0.7853981634, dGeomMinSize=0.0005, dMinStretchVal=0.0, iPerformanceMode=1, dAutoMergeTinyFacesAngle=0.5235987756, bGeomApprox=True, iNextEntityOffsetId=0))\n\nMeshing.SurfaceMeshing(crlPart=[Part(1, 2)], surfaceMesh=SURFACE_MESH(dMaxElemSize=0.015, dMinElemSize=0.0005, dGeomAngle=0.7853981634, dGeomMinSize=0.0005, dMinStretchVal=0.0, iPerformanceMode=1, dAutoMergeTinyFacesAngle=0.5235987756, bGeomApprox=True, iNextEntityOffsetId=0), iThreadNum=4)\nMeshing.SolidMeshing(crlPart=[Part(1, 2)], bTet10=True, dGradingFactor=1.05, dStretchLimit=0.1, iSpeedVsQual=1, iRegion=1, bSafeMode=False, iParallel=4, bInternalMeshOnly=False, iPartColor=65280)\nTools.Section(bSection=1)\n')))}b.isMDXComponent=!0}}]);