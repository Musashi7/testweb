(window.webpackJsonp=window.webpackJsonp||[]).push([[323],{1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),m=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=m(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),b=m(n),u=r,d=b["".concat(l,".").concat(u)]||b[u]||s[u]||o;return n?a.a.createElement(d,i(i({ref:t},c),{},{components:n})):a.a.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},399:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return m}));var r=n(3),a=n(7),o=(n(0),n(1441)),l={id:"Home.ImportMesh.NastranBdf",title:"Home.ImportMesh.NastranBdf()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Import Mesh - Nastran BDF file"},i={unversionedId:"psj-command/home/Home.ImportMesh.NastranBdf",id:"psj-command/home/Home.ImportMesh.NastranBdf",isDocsHomePage:!1,title:"Home.ImportMesh.NastranBdf()",description:"Import Mesh - Nastran BDF file",source:"@site/docs\\psj-command\\home\\Home.ImportMesh.NastranBdf.md",slug:"/psj-command/home/Home.ImportMesh.NastranBdf",permalink:"/testweb/docs/psj-command/home/Home.ImportMesh.NastranBdf",version:"current",sidebar:"api",previous:{title:"Home.ImportMesh.LSDYNA()",permalink:"/testweb/docs/psj-command/home/Home.ImportMesh.LSDYNA"},next:{title:"Home.ImportMesh.TSVPre()",permalink:"/testweb/docs/psj-command/home/Home.ImportMesh.TSVPre"}},p=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],c={toc:p};function m(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"description"},"Description"),Object(o.b)("p",null,"Import Nastran BDF file."),Object(o.b)("h2",{id:"syntax"},"Syntax"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Home.ImportMesh.NastranBdf(strlPath, iImportType=2, dFaceAngle=60.0, dEdgeAngle=60.0, \n    bReadNameComment=False, iCreateDup1DElemAnswer=-1)\n")),Object(o.b)("p",null,"Macro: {ref}",Object(o.b)("inlineCode",{parentName:"p"},"Macro-Home-ImportBdf")),Object(o.b)("p",null,"Ribbon: {menuselection}",Object(o.b)("inlineCode",{parentName:"p"},"Home --\x3e ImportMesh --\x3e NastranBdf")),Object(o.b)("h2",{id:"inputs"},"Inputs"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"strlPaths")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"String List")," specifying the list of the paths of the Nastran BDF files."),Object(o.b)("li",{parentName:"ul"},"This is a required input.")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"iImportType")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"An ",Object(o.b)("em",{parentName:"li"},"Integer")," specifying the import type."),Object(o.b)("li",{parentName:"ul"},"0: Standard Nastran BDF - Import the BDF model geometry only."),Object(o.b)("li",{parentName:"ul"},"1: Standard Nastran BDF by Property with 1D2D3D-Part - Import the BDF model geometry and material property. All material parts are applied to each part."),Object(o.b)("li",{parentName:"ul"},"2: Standard Nastran BDF by Property with 1D-Edge,2D-Face,3D-Part - Import the BDF model geometry and material property. Parts are created for each material property. The 1D, 2D material properties are applied to edges or faces of a single part. 3D material properties are applied to each part. (Hollow 1D material properties are applied to each part.)"),Object(o.b)("li",{parentName:"ul"},"The default value is 2.")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"dFaceAngle")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Double")," specifying the angle tolerance in order to determine the face division. Define a face by creating an edge between adjacent elements with an angle smaller than the specified value."),Object(o.b)("li",{parentName:"ul"},"The default value is 60.0.")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"dEdgeAngle")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Double")," specifying the angle tolerance in order to determine the edge division. Divide an edge by creating a vertex on adjacent edge elements with an angle larger than the specified value."),Object(o.b)("li",{parentName:"ul"},"The default value is 60.0.")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"bReadNameComment")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Boolean")," specifying the option that read name comments for Jupiter."),Object(o.b)("li",{parentName:"ul"},"The default value is False.")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"iCreateDup1DElemAnswer")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Integer")," specifying the option that creating duplicated 1D element ."),Object(o.b)("li",{parentName:"ul"},"-1: Unknown"),Object(o.b)("li",{parentName:"ul"},"0: No"),Object(o.b)("li",{parentName:"ul"},"1: yes"),Object(o.b)("li",{parentName:"ul"},"The default value is -1.")),Object(o.b)("h2",{id:"return-code"},"Return Code"),Object(o.b)("p",null,"A ",Object(o.b)("em",{parentName:"p"},"String")," of 1 if succeed, or 0 if fail."),Object(o.b)("h2",{id:"sample-code"},"Sample Code"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'Home.ImportMesh.NastranBdf(strlPath=[JPT.GetProgramPath() + "SampleData\\\\Mesh_Model\\\\Nastran_File.bdf"], \n    bReadNameComment=True)\n\n')))}m.isMDXComponent=!0}}]);