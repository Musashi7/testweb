(window.webpackJsonp=window.webpackJsonp||[]).push([[1308],{1387:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),i=(n(0),n(1441)),l={id:"Analysis.TSSS.SteadyStateHeatTransfer",title:"Analysis.TSSS.SteadyStateHeatTransfer()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Export TechnoStar SunShine Steady State Heat Transfer solver file (SOL 153)"},s={unversionedId:"psj-command/analysis/Analysis.TSSS.SteadyStateHeatTransfer",id:"psj-command/analysis/Analysis.TSSS.SteadyStateHeatTransfer",isDocsHomePage:!1,title:"Analysis.TSSS.SteadyStateHeatTransfer()",description:"Export TechnoStar SunShine Steady State Heat Transfer solver file (SOL 153)",source:"@site/docs\\psj-command\\analysis\\Analysis.TSSS.SteadyStateHeatTransfer.md",slug:"/psj-command/analysis/Analysis.TSSS.SteadyStateHeatTransfer",permalink:"/testweb/docs/psj-command/analysis/Analysis.TSSS.SteadyStateHeatTransfer",version:"current",sidebar:"api",previous:{title:"Analysis.TSSS.NormalModes()",permalink:"/testweb/docs/psj-command/analysis/Analysis.TSSS.NormalModes"},next:{title:"Analysis.TSSS.TransientHeatTransfer()",permalink:"/testweb/docs/psj-command/analysis/Analysis.TSSS.TransientHeatTransfer"}},o=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],c={toc:o};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"This method exports the Input Deck for TechnoStar SunShine Steady State Heat Transfer analysis (SOL 153)."),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'Analysis.TSSS.SteadyStateHeatTransfer(strName="Job_1", strDescription="", crlTarget=[], \n    nastranAnalysis=NASTRAN_ANALYSIS(), crEdit=None, strPath="", \n    iModelCheckAnswer=0, iDeleteSlaveNodesAnswer=0)\n')),Object(i.b)("p",null,"Macro: {ref}",Object(i.b)("inlineCode",{parentName:"p"},"Macro-Analysis-SunShine-SteadyStateHeatTransfer")),Object(i.b)("p",null,"Ribbon: {menuselection}",Object(i.b)("inlineCode",{parentName:"p"},"Analysis --\x3e SunShine --\x3e Steady State Heat Transfer(SOL 153)")),Object(i.b)("h2",{id:"inputs"},"Inputs"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"strName")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"String")," specifying the job name of TechnoStar SunShine solver. Output set by this name will be saved in the Assembly tree."),Object(i.b)("li",{parentName:"ul"},'The default value is "Job_1".')),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"strDescription")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"String")," specifying the description of TechnoStar SunShine solver job."),Object(i.b)("li",{parentName:"ul"},'The default value is "".')),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crlTarget")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor List")," specifying the list of target part."),Object(i.b)("li",{parentName:"ul"},"The default value is [] (all parts in the model).")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"nastranAnalysis")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Nastran Analysis")," specifying the TechnoStar SunShine solver input parameter.")),Object(i.b)("p",null,": The default value is ",Object(i.b)("em",{parentName:"p"},"[NASTRAN_ANALYSIS`()"),".](NASTRAN",Object(i.b)("em",{parentName:"p"},"ANALYSIS`()"),".): The default value is ",Object(i.b)("em",{parentName:"p"},"{ref}",Object(i.b)("inlineCode",{parentName:"em"},"NASTRAN_ANALYSIS"),"()"),"."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crEdit")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor")," specifying the created TechnoStar SunShine solver job. If this parameter is used, the value will be DynamisJob(",Object(i.b)("em",{parentName:"li"},"ID"),"), where ",Object(i.b)("em",{parentName:"li"},"ID")," is the ID of the solver job had been created. If it is left ",Object(i.b)("em",{parentName:"li"},"None"),", a new TechnoStar solver job will be created."),Object(i.b)("li",{parentName:"ul"},"The default value is ",Object(i.b)("em",{parentName:"li"},"None"),".")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"strPath")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"String")," specifying the export location for bdf file."),Object(i.b)("li",{parentName:"ul"},"This is a required input.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"iModelCheckAnswer")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"An ",Object(i.b)("em",{parentName:"li"},"Integer")," specifying the model checking option."),Object(i.b)("li",{parentName:"ul"},"The default value is 0.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"iDeleteSlaveNodesAnswer")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"An ",Object(i.b)("em",{parentName:"li"},"Integer")," specifying the deleting slave nodes option."),Object(i.b)("li",{parentName:"ul"},"The default value is 0.")),Object(i.b)("h2",{id:"return-code"},"Return Code"),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"String")," of 1 if success, or 0 if fail."),Object(i.b)("h2",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'Geometry.Part.Cube(iColorPart=12603072)\nMeshing.SolidMeshing(crlPart=[Part(1)], bTet10=True, dGradingFactor=1.05, \n    dStretchLimit=0.1, iSpeedVsQual=1, iRegion=1, bSafeMode=False,\n    iParallel=12, bInternalMeshOnly=False, iPartColor=65280)\n\nProperties.Material.Add("Structural_Steel", [Density([(DENSITY, 7.849999999999999e-09)]),\n    Elastic([(YOUNGS_MODULUS, 200000.0), (POISSONS_RATIO, 0.3)])])\nProperties.Solid(crMaterial=Material(1),dDynaRemeshVal1=DFLT_DBL,\n    dDynaRemeshVal2=DFLT_DBL, dDispHG=DFLT_DBL, crlTarget=[Part(1)], iFLG=-1)\n\nBoundaryConditions.BoundaryTemperature.Constant(dFTemp=373.15, crlTarget=[Face(24)])\nBoundaryConditions.HeatFlux.SurfaceFlux(strName="SurfaceHeatFlux1", dFflux=150000.0,\n    iDistributionMethod=1, crTable=None, crlTarget=[Face(23)])\n\ninput_param = NASTRAN_ANALYSIS(iSolverType=6, iGridFormatType=1, dEpsilon=1e-13, \n    iMaxNumOfIter=500, iNumberOfThreads=1, iMemory=2, iNcpu=1, iSolNo=153,\n    nastranOutputRequest=NASTRAN_OUTPUT_REQUEST(iTypeThermal=1, iTypeFlux=6),\n    nastranNonlinear=NASTRAN_NONLINEAR(iMAXITER=DFLT_INT, bUseEPSP=True, bUseEPSW=True,\n    dEPSU=DFLT_DBL, dEPSP=0.001, dEPSW=1e-06))\nAnalysis.TSSS.SteadyStateHeatTransfer( nastranAnalysis = input_param, strPath="C:/temp/Job_1.bdf")\n\n\n')))}b.isMDXComponent=!0},1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return S}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),b=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=b(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=b(n),d=a,S=p["".concat(l,".").concat(d)]||p[d]||u[d]||i;return n?r.a.createElement(S,s(s({ref:t},c),{},{components:n})):r.a.createElement(S,s({ref:t},c))}));function S(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<i;c++)l[c]=n[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);