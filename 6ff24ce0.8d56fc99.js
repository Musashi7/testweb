(window.webpackJsonp=window.webpackJsonp||[]).push([[575],{1441:function(e,t,r){"use strict";r.d(t,"a",(function(){return i})),r.d(t,"b",(function(){return O}));var n=r(0),c=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var a=c.a.createContext({}),p=function(e){var t=c.a.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},i=function(e){var t=p(e.components);return c.a.createElement(a.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},d=c.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,a=s(e,["components","mdxType","originalType","parentName"]),i=p(r),d=n,O=i["".concat(l,".").concat(d)]||i[d]||b[d]||o;return r?c.a.createElement(O,u(u({ref:t},a),{},{components:r})):c.a.createElement(O,u({ref:t},a))}));function O(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=d;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:n,l[1]=u;for(var a=2;a<o;a++)l[a]=r[a];return c.a.createElement.apply(null,l)}return c.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},654:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return l})),r.d(t,"metadata",(function(){return u})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return p}));var n=r(3),c=r(7),o=(r(0),r(1441)),l={id:"AdvcSpectrumProcess",title:"AdvcSpectrumProcess",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/"},u={unversionedId:"macro/analysis/AdvcSpectrumProcess",id:"macro/analysis/AdvcSpectrumProcess",isDocsHomePage:!1,title:"AdvcSpectrumProcess",description:"Description",source:"@site/docs\\macro\\analysis\\Macro-Analysis-AdvcSpectrumProcess.md",slug:"/macro/analysis/AdvcSpectrumProcess",permalink:"/testweb/docs/macro/analysis/AdvcSpectrumProcess",version:"current",sidebar:"api",previous:{title:"ExportDynamisBdf",permalink:"/testweb/docs/macro/analysis/ExportDynamisBdf"},next:{title:"AdvcSSHProcess",permalink:"/testweb/docs/macro/analysis/AdvcSSHProcess"}},s=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],a={toc:s};function p(e){var t=e.components,r=Object(c.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},a,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"description"},"Description"),Object(o.b)("p",null,"create advc response spectrum process"),Object(o.b)("h2",{id:"syntax"},"Syntax"),Object(o.b)("p",null,"AdvcSpectrumProcess(String m_strName,string strRefEigenDir,double dRefLowFreq,double dRefHighFreq,int iPropMethod,int iSpttype,double dSptFactor","[0]",",Cursor crSpt","[0]",",double dSptFactor","[1]",",Cursor crSpt","[1]",",double dSptFactor","[2]",",Cursor crSpt","[2]",",Cursor m_crEdit,List m_LoadNodeList,List m_LoadCaseNodeList,List m_LoadNodeContactList,List m_OutputParamList,int m_iRefType,String m_strRefPath,List m_ReferenceResultList)"),Object(o.b)("h2",{id:"inputs"},"Inputs"),Object(o.b)("p",null,"String"),Object(o.b)("p",null,"name of advc response spectrum process"),Object(o.b)("p",null,"string"),Object(o.b)("p",null,"the path of result file"),Object(o.b)("p",null,"double"),Object(o.b)("p",null,"refer low frequency"),Object(o.b)("p",null,"double"),Object(o.b)("p",null,"refer high frequency"),Object(o.b)("p",null,"int"),Object(o.b)("p",null,"method","[0:ABS; 1:SRSS]"),Object(o.b)("p",null,"int"),Object(o.b)("p",null,"spectrum type","[0:Displacement; 1:Velocity; 2:Acceleration]"),Object(o.b)("p",null,"double"),Object(o.b)("p",null,"factor in CO x"),Object(o.b)("p",null,"Cursor"),Object(o.b)("p",null,"spectrum cursor in CO x"),Object(o.b)("p",null,"double"),Object(o.b)("p",null,"factor in CO y"),Object(o.b)("p",null,"Cursor"),Object(o.b)("p",null,"spectrum cursor in CO y"),Object(o.b)("p",null,"double"),Object(o.b)("p",null,"factor in CO z"),Object(o.b)("p",null,"Cursor"),Object(o.b)("p",null,"spectrum cursor in CO z"),Object(o.b)("p",null,"Cursor"),Object(o.b)("p",null,"edit cursor"),Object(o.b)("p",null,"List"),Object(o.b)("p",null,"status of Loads"),Object(o.b)("p",null,"List"),Object(o.b)("p",null,"status of Load Cases"),Object(o.b)("p",null,"List"),Object(o.b)("p",null,"status and other data of Contacts"),Object(o.b)("p",null,"List"),Object(o.b)("p",null,"output parameters"),Object(o.b)("p",null,"int"),Object(o.b)("p",null,"reference result type","[0:Temperature Load; 1:Stress]"),Object(o.b)("p",null,"String"),Object(o.b)("p",null,"path of reference result"),Object(o.b)("p",null,"List"),Object(o.b)("p",null,"data of reference result"),Object(o.b)("h2",{id:"return-code"},"Return Code"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"1")," - The function is executed correctly."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"0")," - Cannot execute."),Object(o.b)("h2",{id:"sample-code"},"Sample Code"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'AdvcSpectrumProcess("Test",,0.001,0.001,1,1,0.001,1:11,0.001,1:11,0.001,1:11,1:11,,,,,1,"Test",)\n')))}p.isMDXComponent=!0}}]);