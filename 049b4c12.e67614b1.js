(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var o=n(0),r=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=r.a.createContext({}),s=function(e){var t=r.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),p=o,f=u["".concat(a,".").concat(p)]||u[p]||b[p]||i;return n?r.a.createElement(f,c(c({ref:t},d),{},{components:n})):r.a.createElement(f,c({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var d=2;d<i;d++)a[d]=n[d];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},93:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var o=n(3),r=n(7),i=(n(0),n(1441)),a={id:"BoundaryConditions.EnforcedLoads.Velocity",title:"BoundaryConditions.EnforcedLoads.Velocity()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Create enforced velocity on face, edge, node"},c={unversionedId:"psj-command/boundary-conditions/BoundaryConditions.EnforcedLoads.Velocity",id:"psj-command/boundary-conditions/BoundaryConditions.EnforcedLoads.Velocity",isDocsHomePage:!1,title:"BoundaryConditions.EnforcedLoads.Velocity()",description:"Create enforced velocity on face, edge, node",source:"@site/docs\\psj-command\\boundary-conditions\\BoundaryConditions.EnforcedLoads.Velocity.md",slug:"/psj-command/boundary-conditions/BoundaryConditions.EnforcedLoads.Velocity",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.EnforcedLoads.Velocity",version:"current",sidebar:"api",previous:{title:"BoundaryConditions.EnforcedLoads.Displacement()",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.EnforcedLoads.Displacement"},next:{title:"BoundaryConditions.FieldData()",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.FieldData"}},l=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],d={toc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"This method creates enforced velocity to face, edge or node. User inputs enforce velocity parameters, and it will return enforced velocity to the specified location."),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-python"}),'BoundaryConditions.EnforcedLoads.Velocity(strName="EnforcedVelocity1",\n    enforceVelocity=ENFORCED_VELOCITY_LBC(), crlTarget=[], crEdit=None, bADVCStatic=False)\n')),Object(i.b)("p",null,"Macro: {ref}",Object(i.b)("inlineCode",{parentName:"p"},"Macro-BoundaryConditions-EnforcedVelocity")),Object(i.b)("p",null,"Ribbon: {menuselection}",Object(i.b)("inlineCode",{parentName:"p"},"Boundary Conditions --\x3e Enforced Loads --\x3e Velocity")),Object(i.b)("h2",{id:"inputs"},"Inputs"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"strName")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"String")," specifying the enforced velocity load name."),Object(i.b)("li",{parentName:"ul"},'The default value is "EnforcedVelocity1".')),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"enforceVelocity")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},Object(i.b)("a",Object(o.a)({parentName:"em"},{href:"ENFORCED_VELOCITY_LBC"}),"ENFORCED_VELOCITY_LBC"))," specifying the enforce velocity parameters."),Object(i.b)("li",{parentName:"ul"},"This is a required input.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crlTarget")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor List")," specifying the list of targets to apply enforced velocity. Target can be face, edge or node."),Object(i.b)("li",{parentName:"ul"},"This is a required input.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crEdit")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor")," specifying an existing enforced velocity. If this parameter is used, the specified enforced velocity will be modified. If it is left ",Object(i.b)("em",{parentName:"li"},"None"),", a new enforced velocity will be created."),Object(i.b)("li",{parentName:"ul"},"The default value is ",Object(i.b)("em",{parentName:"li"},"None"),".")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"bADVCStatic")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Boolean")," specifying whether to create 2 ADVC Static processes for bolt fix length or not."),Object(i.b)("li",{parentName:"ul"},"The default value is ",Object(i.b)("em",{parentName:"li"},"False"),".")),Object(i.b)("h2",{id:"return-code"},"Return Code"),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"String")," of 1 if success, or 0 if fail."),Object(i.b)("h2",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-python"}),"Geometry.Part.Cube()\nBoundaryConditions.EnforcedLoads.Velocity(enforceVelocity=ENFORCED_VELOCITY_LBC(iDwDof=1,\n    dFVel0=0.001), crlTarget=[Face(24)])\n\n")))}s.isMDXComponent=!0}}]);