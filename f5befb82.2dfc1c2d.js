(window.webpackJsonp=window.webpackJsonp||[]).push([[1296],{1375:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(7),i=(n(0),n(1441)),a={id:"BoundaryConditions.Force.NormalDirection",title:"BoundaryConditions.Force.NormalDirection()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Create Force (normal direction)"},c={unversionedId:"psj-command/boundary-conditions/BoundaryConditions.Force.NormalDirection",id:"psj-command/boundary-conditions/BoundaryConditions.Force.NormalDirection",isDocsHomePage:!1,title:"BoundaryConditions.Force.NormalDirection()",description:"Create Force (normal direction)",source:"@site/docs\\psj-command\\boundary-conditions\\BoundaryConditions.Force.NormalDirection.md",slug:"/psj-command/boundary-conditions/BoundaryConditions.Force.NormalDirection",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.Force.NormalDirection",version:"current",sidebar:"api",previous:{title:"BoundaryConditions.Force.NonlinearForce.NOLIN4()",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.Force.NonlinearForce.NOLIN4"},next:{title:"BoundaryConditions.HeatFlux.ConcentrateFlux()",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.HeatFlux.ConcentrateFlux"}},l=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],d={toc:l};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"This method creates a force in the normal direction applies on selected Face, Edge, Node/MidNode, Normal(Element). User inputs the force value, and it will apply the force to the selected items."),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'BoundaryConditions.Force.NormalDirection(strName="Force1", dForce=0, crElemForNormal=None, iArrowDir=0, iDistributeType=0, crCoord=None, crlTarget=[], crEdit=None)\n')),Object(i.b)("p",null,"Macro: {ref}",Object(i.b)("inlineCode",{parentName:"p"},"Macro-BoundaryConditions-ForceNormalDirection")),Object(i.b)("p",null,"Ribbon: {menuselection}",Object(i.b)("inlineCode",{parentName:"p"},"Boundary Conditions --\x3e Force --\x3e Normal Direction")),Object(i.b)("h2",{id:"inputs"},"Inputs"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"strName")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"String")," specifying the name of the force setting."),Object(i.b)("li",{parentName:"ul"},'The default value is "ForceNormal1".')),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"dForce")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the total force value (default unit: N)."),Object(i.b)("li",{parentName:"ul"},"The default value is 0.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crElemForNormal")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor")," specifying a 2D element. This element will be used to calculate vector normal for force direction.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"iArrowDir")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"An ",Object(i.b)("em",{parentName:"li"},"Integer")," specifying the display arrow direction. This parameter only affects the display of the force setting, the force itself remains intact. The value for this parameter is one of the following."),Object(i.b)("li",{parentName:"ul"},"0: Start at node."),Object(i.b)("li",{parentName:"ul"},"1: End at node."),Object(i.b)("li",{parentName:"ul"},"The default value is 0.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"iDistributeType")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"An ",Object(i.b)("em",{parentName:"li"},"Integer")," specifying the force distribution method. The value for this parameter is one of the following."),Object(i.b)("li",{parentName:"ul"},"0: Per selected entity. Each selected item (Face, Edge, Node) receives the same amount of the specified force. For example, a vector force ","[1; 0; 2]"," is applied on 2 faces, then each face will receive a vector force ","[1; 0; 2]","."),Object(i.b)("li",{parentName:"ul"},"1: Per selected node. Each nodes in selected items (Face, Edge, Node) receives the same amount of the specified force. For example, a vector force ","[1; 0; 2]"," is applied on 1 edge, which has 10 nodes, then each node will receive a vector force ","[1; 0; 2]","."),Object(i.b)("li",{parentName:"ul"},"2: Total of selected entity. Each selected item (Face, Edge, Node) receives the same amount of force, which is the specified force divided by the number of selected entity. For example, a vector force ","[1; 0; 2]"," is applied on 2 faces, then each face will receive a vector force ","[0.5; 0; 1]","."),Object(i.b)("li",{parentName:"ul"},"The default value is 0.")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crCoord")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor")," specifying the coordinate from which the fixed constraint is created."),Object(i.b)("li",{parentName:"ul"},"The default value is None (global coordinate system).")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crlTarget")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor List")," specifying the list of targets for normal direction force. This target can be Face, Edge, Node/MidNode, Normal(Element)."),Object(i.b)("li",{parentName:"ul"},"The default value is [].")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crEdit")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor")," specifying an existing normal direction force. If this parameter is used, the specified normal direction force will be modified. If it is left None, a new normal direction force will be created."),Object(i.b)("li",{parentName:"ul"},"The default value is None.")),Object(i.b)("h2",{id:"return-code"},"Return Code"),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"String")," of 1 if succeed, or 0 if fail."),Object(i.b)("h2",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'Geometry.Part.Cube()\n\nBoundaryConditions.Force.NormalDirection(strName="ForceNormal1", dForce=1, crElemForNormal=Elem(1008), \n    crlTarget=[Face(26)])\n\n')))}u.isMDXComponent=!0},1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=o.a.createContext({}),u=function(e){var t=o.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=u(e.components);return o.a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},p=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),b=u(n),p=r,m=b["".concat(a,".").concat(p)]||b[p]||s[p]||i;return n?o.a.createElement(m,c(c({ref:t},d),{},{components:n})):o.a.createElement(m,c({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var d=2;d<i;d++)a[d]=n[d];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);