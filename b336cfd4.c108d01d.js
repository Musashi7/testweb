(window.webpackJsonp=window.webpackJsonp||[]).push([[906],{1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),b=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=b(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=b(n),m=r,d=u["".concat(i,".").concat(m)]||u[m]||s[m]||o;return n?a.a.createElement(d,c(c({ref:t},p),{},{components:n})):a.a.createElement(d,c({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},985:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),o=(n(0),n(1441)),i={id:"Geometry.BodyCut.By3Points",title:"Geometry.BodyCut.By3Points()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Cut a part by 3 points"},c={unversionedId:"psj-command/geometry/Geometry.BodyCut.By3Points",id:"psj-command/geometry/Geometry.BodyCut.By3Points",isDocsHomePage:!1,title:"Geometry.BodyCut.By3Points()",description:"Cut a part by 3 points",source:"@site/docs\\psj-command\\geometry\\Geometry.BodyCut.By3Points.md",slug:"/psj-command/geometry/Geometry.BodyCut.By3Points",permalink:"/testweb/docs/psj-command/geometry/Geometry.BodyCut.By3Points",version:"current",sidebar:"api",previous:{title:"Geometry.Bar.TwoNodes()",permalink:"/testweb/docs/psj-command/geometry/Geometry.Bar.TwoNodes"},next:{title:"Geometry.BodyCut.BySurface()",permalink:"/testweb/docs/psj-command/geometry/Geometry.BodyCut.BySurface"}},l=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],p={toc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"description"},"Description"),Object(o.b)("p",null,"This method partitions a part using the given cutting planes defined by three points to partition the target parts."),Object(o.b)("h2",{id:"syntax"},"Syntax"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Geometry.BodyCut.By3Points(crPart, poslPosition=[[0,0,0], [0,0,0], [0,0,0]], dOffset=0.0,\n    bSplitOnly=False, bMakeSectionFace=True, bShareFace=False)\n")),Object(o.b)("p",null,"Macro: {ref}",Object(o.b)("inlineCode",{parentName:"p"},"Macro-Geometry-BodyCutBy3PointsS")),Object(o.b)("p",null,"Ribbon: {menuselection}",Object(o.b)("inlineCode",{parentName:"p"},"Geometry --\x3e Body Cut --\x3e 3 Points")),Object(o.b)("h2",{id:"inputs"},"Inputs"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"crPart")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Cursor")," specifying the part to partition."),Object(o.b)("li",{parentName:"ul"},"This is a required input.")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"poslPosition")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"List of Position")," specifying positions to defined the cutting plane. Each position can get from node, point on edge or point on face."),Object(o.b)("li",{parentName:"ul"},"The default value is [","[0,0,0]",", ","[0,0,0]",", ","[0,0,0]","].")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"dOffset")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Double")," specifying the offset distance from the selected positions."),Object(o.b)("li",{parentName:"ul"},"The default value is 0.0.")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"bSplitOnly")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Boolean")," specifying whether or not retain the original part."),Object(o.b)("li",{parentName:"ul"},"If ",Object(o.b)("em",{parentName:"li"},"False"),", the given part will be divided into two parts separately."),Object(o.b)("li",{parentName:"ul"},"If ",Object(o.b)("em",{parentName:"li"},"True"),", the given part just split by cutting plane without dividing into two parts."),Object(o.b)("li",{parentName:"ul"},"The default value is ",Object(o.b)("em",{parentName:"li"},"False"),".")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"bMakeSectionFace")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Boolean")," specifying whether to generate a cross-section face at the division section."),Object(o.b)("li",{parentName:"ul"},"The default value is ",Object(o.b)("em",{parentName:"li"},"True"),".")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"bShareFace")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Boolean")," specifying whether to generate a shared face at the division section. This argument will only affect the functionality when ",Object(o.b)("em",{parentName:"li"},"bMakeSectionFace=True")," and ",Object(o.b)("em",{parentName:"li"},"bSplitOnly=False"),"."),Object(o.b)("li",{parentName:"ul"},"The default value is ",Object(o.b)("em",{parentName:"li"},"False"),".")),Object(o.b)("h2",{id:"return-code"},"Return Code"),Object(o.b)("p",null,"A ",Object(o.b)("em",{parentName:"p"},"String")," of 1 if success, or 0 if fail."),Object(o.b)("h2",{id:"sample-code"},"Sample Code"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Geometry.Part.Cube()\n\nGeometry.BodyCut.By3Points(crPart=Part(1), poslPosition=[[0.001, 0, 0.01], [0.003, 0.01, 0.01],\n    [0.004, 0.01, 0]])\n\n")))}b.isMDXComponent=!0}}]);