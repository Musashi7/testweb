(window.webpackJsonp=window.webpackJsonp||[]).push([[705],{1441:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return m}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=o.a.createContext({}),l=function(e){var n=o.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=l(e.components);return o.a.createElement(u.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},d=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=l(t),d=r,m=s["".concat(c,".").concat(d)]||s[d]||b[d]||a;return t?o.a.createElement(m,i(i({ref:n},u),{},{components:t})):o.a.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var u=2;u<a;u++)c[u]=t[u];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},784:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return i})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return l}));var r=t(3),o=t(7),a=(t(0),t(1441)),c={id:"MappingPressure",title:"MappingPressure",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/"},i={unversionedId:"macro/boundary-conditions/MappingPressure",id:"macro/boundary-conditions/MappingPressure",isDocsHomePage:!1,title:"MappingPressure",description:"Description",source:"@site/docs\\macro\\boundary-conditions\\Macro-Boundary-Conditions-MappingPressure.md",slug:"/macro/boundary-conditions/MappingPressure",permalink:"/testweb/docs/macro/boundary-conditions/MappingPressure",version:"current",sidebar:"api",previous:{title:"ForceNormalDirection",permalink:"/testweb/docs/macro/boundary-conditions/ForceNormalDirection"},next:{title:"SubmodelForcedDisp",permalink:"/testweb/docs/macro/boundary-conditions/SubmodelForcedDisp"}},p=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],u={toc:p};function l(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"description"},"Description"),Object(a.b)("p",null,"Create mapping pressure"),Object(a.b)("h2",{id:"syntax"},"Syntax"),Object(a.b)("p",null,"MappingPressure(String name, Cursor[] target, int pos, int conflictMode, int component, int srcType, int mappedComponentIndex, double dSclFact, double","[3]"," transitionVct, double","[3]"," rotVct, double coordScl, double dSearchRange, int iInputUnit, string strDataScrFile, Cursor editCursor)"),Object(a.b)("h2",{id:"inputs"},"Inputs"),Object(a.b)("p",null,"1",".","  String\nname of mapping pressure"),Object(a.b)("p",null,"2",".","  Cursor[]\nmapping target entities"),Object(a.b)("p",null,"3",".","  int\nmapping positon, 0: surface node, 1:solid node, 2:surface element, 3: solid element"),Object(a.b)("p",null,"4",".","  int\nhow to deal conflict case"),Object(a.b)("p",null,"5",".","  int\ncomponent number, 1 for pressure"),Object(a.b)("p",null,"6",".","  int\nsource data type, 0: fluent, 1: starCD, 2:text"),Object(a.b)("p",null,"7",".","  int\npressure data index in file"),Object(a.b)("p",null,"8",".","  double\nScale factor for mapping pressure"),Object(a.b)("p",null,"9",".","  double","[3]","\nTransition vector"),Object(a.b)("p",null,"10",".","  double","[3]","\nRotation vector"),Object(a.b)("p",null,"11",".","  double\nCoordinate scale value"),Object(a.b)("p",null,"12",".","  double\nSearch range*"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"*0: Auto search range\n\n\u2002Value: Tolerance search range\n")),Object(a.b)("p",null,"13",".","  int\nInput Unit*"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"*0: MPa\n\n\u20021: Pa\n\n\u20022: kPa\n\n\u20023: kgf/mm^2\n\n\u20024: lbf/ft^2\n\n\u20025: tf/m^2\n\n\u20026: GPa\n")),Object(a.b)("p",null,"14",".","  string\npressure data index in file"),Object(a.b)("p",null,"15",".","  Cursor\nEdit mapping pressure"),Object(a.b)("h2",{id:"return-code"},"Return Code"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"1")," - The function is executed correctly."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"0")," - Cannot execute."),Object(a.b)("h2",{id:"sample-code"},"Sample Code"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'MappingPressure("MappingPressure1", [6:30, 6:22], 2, 0, 1, 1, -1, 1, [0, 0, 0], [0, 0, 0], 1, 0, 0, "D:/ImportFile/Fluent.dat", 0:0)\n')))}l.isMDXComponent=!0}}]);