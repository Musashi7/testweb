(window.webpackJsonp=window.webpackJsonp||[]).push([[491],{1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return y}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=o.a.createContext({}),u=function(e){var t=o.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=u(e.components);return o.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=u(n),b=r,y=s["".concat(i,".").concat(b)]||s[b]||p[b]||a;return n?o.a.createElement(y,c(c({ref:t},d),{},{components:n})):o.a.createElement(y,c({ref:t},d))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var d=2;d<a;d++)i[d]=n[d];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},567:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(7),a=(n(0),n(1441)),i={id:"BoundaryConditions.BodyLoads.Gravity",title:"BoundaryConditions.BodyLoads.Gravity()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Define the acceleration load of gravity to the selected Part."},c={unversionedId:"psj-command/boundary-conditions/BoundaryConditions.BodyLoads.Gravity",id:"psj-command/boundary-conditions/BoundaryConditions.BodyLoads.Gravity",isDocsHomePage:!1,title:"BoundaryConditions.BodyLoads.Gravity()",description:"Define the acceleration load of gravity to the selected Part.",source:"@site/docs\\psj-command\\boundary-conditions\\BoundaryConditions.BodyLoads.Gravity.md",slug:"/psj-command/boundary-conditions/BoundaryConditions.BodyLoads.Gravity",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.BodyLoads.Gravity",version:"current",sidebar:"api",previous:{title:"BoundaryConditions.BodyLoads.CentrifugalForce.TwoPositions()",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.BodyLoads.CentrifugalForce.TwoPositions"},next:{title:"BoundaryConditions.BoundaryTemperature.Constant()",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.BoundaryTemperature.Constant"}},l=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],d={toc:l};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"description"},"Description"),Object(a.b)("p",null,"This method defines the acceleration load of gravity to the selected part. User inputs the value of the acceleration load of gravity, and it will return the acceleration load of gravity to the selected parts."),Object(a.b)("h2",{id:"syntax"},"Syntax"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'BoundaryConditions.BodyLoads.Gravity(strName="Gravity1", dlGravity, crCurCoord=None, crlTarget=[], crEdit=None)\n')),Object(a.b)("p",null,"Macro: {ref}",Object(a.b)("inlineCode",{parentName:"p"},"Macro-BoundaryConditions-Gravity")),Object(a.b)("p",null,"Ribbon: {menuselection}",Object(a.b)("inlineCode",{parentName:"p"},"Boundary Conditions --\x3e Body Loads --\x3e Gravity")),Object(a.b)("h2",{id:"inputs"},"Inputs"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"strName")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A ",Object(a.b)("em",{parentName:"li"},"String")," specifying the name of gravity load to be created."),Object(a.b)("li",{parentName:"ul"},'The default value is "Gravity1"')),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"dlGravity")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A ",Object(a.b)("em",{parentName:"li"},"Double List")," specifying the list of acceleration value of each direction (X,Y,Z)."),Object(a.b)("li",{parentName:"ul"},"This is a required input.")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"crCurCoord")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A ",Object(a.b)("em",{parentName:"li"},"Cursor")," specifying the coordinate system for the load."),Object(a.b)("li",{parentName:"ul"},"The default value is None (global coordinate system).")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"crlTarget")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A ",Object(a.b)("em",{parentName:"li"},"Cursor List")," specifying the list of target parts for creating the acceleration load of gravity."),Object(a.b)("li",{parentName:"ul"},"The default value is [].")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"crEdit")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A ",Object(a.b)("em",{parentName:"li"},"Cursor")," specifying an existing gravity load. If this parameter is used, the specified gravity load will be modified. If it is left None, a new gravity load will be created."),Object(a.b)("li",{parentName:"ul"},"The default value is None.")),Object(a.b)("h2",{id:"return-code"},"Return Code"),Object(a.b)("p",null,"A ",Object(a.b)("em",{parentName:"p"},"String")," of 1 if succeed, or 0 if fail."),Object(a.b)("h2",{id:"sample-code"},"Sample Code"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'Geometry.Part.Cube()\n\nBoundaryConditions.BodyLoads.Gravity(strName="Gravity1",\n    dlGravity=[0.0, 0.0, 9810.0], crlTarget=[Part(1)])\n\n')))}u.isMDXComponent=!0}}]);