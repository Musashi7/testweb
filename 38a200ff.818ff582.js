(window.webpackJsonp=window.webpackJsonp||[]).push([[294],{1441:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},b=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,s=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),b=p(a),m=n,u=b["".concat(s,".").concat(m)]||b[m]||d[m]||c;return a?r.a.createElement(u,i(i({ref:t},l),{},{components:a})):r.a.createElement(u,i({ref:t},l))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,s=new Array(c);s[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var l=2;l<c;l++)s[l]=a[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},370:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),c=(a(0),a(1441)),s={id:"Analysis.ADVC.MakeProcess.SteadyState",title:"Analysis.ADVC.MakeProcess.SteadyState()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Create ADVC Analysis - Steady State Process"},i={unversionedId:"psj-command/analysis/Analysis.ADVC.MakeProcess.SteadyState",id:"psj-command/analysis/Analysis.ADVC.MakeProcess.SteadyState",isDocsHomePage:!1,title:"Analysis.ADVC.MakeProcess.SteadyState()",description:"Create ADVC Analysis - Steady State Process",source:"@site/docs\\psj-command\\analysis\\Analysis.ADVC.MakeProcess.SteadyState.md",slug:"/psj-command/analysis/Analysis.ADVC.MakeProcess.SteadyState",permalink:"/testweb/docs/psj-command/analysis/Analysis.ADVC.MakeProcess.SteadyState",version:"current",sidebar:"api",previous:{title:"Analysis.ADVC.MakeProcess.Static()",permalink:"/testweb/docs/psj-command/analysis/Analysis.ADVC.MakeProcess.Static"},next:{title:"Analysis.ADVC.MakeProcess.Transient()",permalink:"/testweb/docs/psj-command/analysis/Analysis.ADVC.MakeProcess.Transient"}},o=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],l={toc:o};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"description"},"Description"),Object(c.b)("p",null,"Create advc heat transfer steady state process"),Object(c.b)("h2",{id:"syntax"},"Syntax"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'Analysis.ADVC.MakeProcess.SteadyState(strName="", advcHeatTimeStep = ADVC_HEAT_TIME_STEP(), bConvergence=False, advcConvergence=ADVC_CONVERGENCE(), crEdit=None, listLoadNode=[], listLoadCaseNode=[], listLoadNodeContact=[], ilOutputParamList=[])\n')),Object(c.b)("p",null,"Macro: {ref}",Object(c.b)("inlineCode",{parentName:"p"},"Macro-Analysis-AdvcSSHProcess")),Object(c.b)("p",null,"Ribbon: {menuselection}",Object(c.b)("inlineCode",{parentName:"p"},"Analysis --\x3e ADVC --\x3e MakeProcess --\x3e SteadyState")),Object(c.b)("h2",{id:"inputs"},"Inputs"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"strName"))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"A ",Object(c.b)("em",{parentName:"li"},"String"),' specifying the process name of ADVC - Steady State process. The default value is "".')),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"advcHeatTimeStep"))),Object(c.b)("p",null,": A ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"ADVC_HEAT_TIME_STEP"}),"ADVC_HEAT_TIME_STEP"))," specifying the heat time step parameters. The default value is {ref}",Object(c.b)("inlineCode",{parentName:"p"},"ADVC_HEAT_TIME_STEP()"),".",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"ADVC_HEAT_TIME_STEP()%60."}),"ADVC_HEAT_TIME_STEP()`."),": A "),Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"ADVC_HEAT_TIME_STEP"}),"ADVC_HEAT_TIME_STEP"),"_ specifying the heat time step parameters. The default value is {ref}",Object(c.b)("inlineCode",{parentName:"p"},"ADVC_HEAT_TIME_STEP()"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"bConvergence"))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"A ",Object(c.b)("em",{parentName:"li"},"Boolean")," enable/disable the convergence convergence parameter defined. The default value is False.")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"advcConvergence"))),Object(c.b)("p",null,": A ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"ADVC_CONVERGENCE"}),"ADVC_CONVERGENCE"))," specifying the convergence parameters. The default value is {ref}",Object(c.b)("inlineCode",{parentName:"p"},"ADVC_CONVERGENCE()"),".",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"ADVC_CONVERGENCE()%60."}),"ADVC_CONVERGENCE()`."),": A "),Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"ADVC_CONVERGENCE"}),"ADVC_CONVERGENCE"),"_ specifying the convergence parameters. The default value is {ref}",Object(c.b)("inlineCode",{parentName:"p"},"ADVC_CONVERGENCE()"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"crEdit"))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"A ",Object(c.b)("em",{parentName:"li"},"Cursor")," specifying the editing ADVC Analysis Steady Static process. The default value is None.")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"listLoadNode"))),Object(c.b)("p",null,": A ",Object(c.b)("em",{parentName:"p"},"[LOAD_NODE` List")," specifying the list of Load node. The default value is [].](LOAD",Object(c.b)("em",{parentName:"p"},"NODE` List")," specifying the list of Load node. The default value is [].): A ",Object(c.b)("em",{parentName:"p"},"{ref}",Object(c.b)("inlineCode",{parentName:"em"},"LOAD_NODE")," List")," specifying the list of Load node. The default value is []."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"listLoadCaseNode"))),Object(c.b)("p",null,": A ",Object(c.b)("em",{parentName:"p"},"[LOAD_CASE_NODE` List")," specifying the list of Load case node. The default value is [].](LOAD",Object(c.b)("em",{parentName:"p"},"CASE_NODE` List")," specifying the list of Load case node. The default value is [].): A ",Object(c.b)("em",{parentName:"p"},"{ref}",Object(c.b)("inlineCode",{parentName:"em"},"LOAD_CASE_NODE")," List")," specifying the list of Load case node. The default value is []."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"listLoadNodeContact"))),Object(c.b)("p",null,": A ",Object(c.b)("em",{parentName:"p"},"[LOAD_NODE_CONTACT` List")," specifying the list of Load node contact. The default value is [].](LOAD",Object(c.b)("em",{parentName:"p"},"NODE_CONTACT` List")," specifying the list of Load node contact. The default value is [].): A ",Object(c.b)("em",{parentName:"p"},"{ref}",Object(c.b)("inlineCode",{parentName:"em"},"LOAD_NODE_CONTACT")," List")," specifying the list of Load node contact. The default value is []."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"ilOutputParamList"))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"A ",Object(c.b)("em",{parentName:"li"},"Integer List")," specifying the list of Output parameters. The default value is [].")),Object(c.b)("h2",{id:"return-code"},"Return Code"),Object(c.b)("p",null,"An ",Object(c.b)("em",{parentName:"p"},"String")," of 1 if successed, or 0 if failed."),Object(c.b)("h2",{id:"sample-code"},"Sample Code"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'Analysis.ADVC.MakeProcess.SteadyState(strName="Process_1", advcHeatTimeStep=ADVC_HEAT_TIME_STEP(dMaxTime=2.0))\n')))}p.isMDXComponent=!0}}]);