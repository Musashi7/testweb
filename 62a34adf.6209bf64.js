(window.webpackJsonp=window.webpackJsonp||[]).push([[502],{1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=r.a.createContext({}),b=function(e){var t=r.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=b(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=b(n),u=a,m=p["".concat(o,".").concat(u)]||p[u]||s[u]||i;return n?r.a.createElement(m,l(l({ref:t},d),{},{components:n})):r.a.createElement(m,l({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},578:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),i=(n(0),n(1441)),o={id:"BoundaryConditions.EnforcedLoads.Displacement",title:"BoundaryConditions.EnforcedLoads.Displacement()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"create enforced displacement"},l={unversionedId:"psj-command/boundary-conditions/BoundaryConditions.EnforcedLoads.Displacement",id:"psj-command/boundary-conditions/BoundaryConditions.EnforcedLoads.Displacement",isDocsHomePage:!1,title:"BoundaryConditions.EnforcedLoads.Displacement()",description:"create enforced displacement",source:"@site/docs\\psj-command\\boundary-conditions\\BoundaryConditions.EnforcedLoads.Displacement.md",slug:"/psj-command/boundary-conditions/BoundaryConditions.EnforcedLoads.Displacement",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.EnforcedLoads.Displacement",version:"current",sidebar:"api",previous:{title:"BoundaryConditions.EnforcedLoads.Acceleration()",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.EnforcedLoads.Acceleration"},next:{title:"BoundaryConditions.EnforcedLoads.Velocity()",permalink:"/testweb/docs/psj-command/boundary-conditions/BoundaryConditions.EnforcedLoads.Velocity"}},c=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],d={toc:c};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"Create enforced displacement"),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'BoundaryConditions.EnforcedLoads.Displacement(strName="", iDof=0, dDispUx=DFLT_DBL, dDispUy=DFLT_DBL, dDispUz=DFLT_DBL, dDispRx=DFLT_DBL, dDispRy=DFLT_DBL, dDispRz=DFLT_DBL, crCoord=None, iArrowDir=0, crTable=None, crNodeSet=None, dPhase=DFLT_DBL, dDelay=DFLT_DBL, crPhaseTable=None, crlTarget=[], crEdit=None)\n')),Object(i.b)("p",null,"Macro: {ref}",Object(i.b)("inlineCode",{parentName:"p"},"Macro-BoundaryConditions-EnforcedDisplacement")),Object(i.b)("p",null,"Ribbon: {menuselection}",Object(i.b)("inlineCode",{parentName:"p"},"BoundaryConditions --\x3e EnforcedLoads --\x3e Displacement")),Object(i.b)("h2",{id:"inputs"},"Inputs"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"strName"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"String"),' specifying the name of enforced load setting. The default value is "".')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"iDof"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"An ",Object(i.b)("em",{parentName:"li"},"Integer")," specifying the degree of freedom (dof). This value is calculated by using OR operator between the following options:")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"dDispUx"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the enforced displacement in x translation direction (default unit: m). The default value is DFLT_DBL.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"dDispUy"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the enforced displacement in y translation direction (default unit: m). The default value is DFLT_DBL.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"dDispUz"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the enforced displacement in z translation direction (default unit: m). The default value is DFLT_DBL.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"dDispRx"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the enforced displacement in x rotation direction (default unit: rad). The default value is DFLT_DBL.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"dDispRy"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the enforced displacement in y rotation direction (default unit: rad). The default value is DFLT_DBL.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"dDispRz"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the enforced displacement in z rotation direction (default unit: rad). The default value is DFLT_DBL.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"crCoord"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor")," specifying the coordinate from which the enforced displacement is created. The default value is None (global coordinate).")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"iArrowDir"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"An ",Object(i.b)("em",{parentName:"li"},"Integer")," specifying the display arrow direction. This parameter only affects the display of the load setting, the load itself remains intact. The value for this parameter is one of the following."),Object(i.b)("li",{parentName:"ul"},"0: Start at node."),Object(i.b)("li",{parentName:"ul"},"1: End at node."),Object(i.b)("li",{parentName:"ul"},"The default value is 0.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"crTable"))),Object(i.b)("p",null,": A ",Object(i.b)("em",{parentName:"p"},"Cursor")," specifying the table created from {ref}",Object(i.b)("inlineCode",{parentName:"p"},"BoundaryConditions.FieldData"),". The default value is None.",Object(i.b)("em",{parentName:"p"},"[BoundaryConditions.FieldData`. The default value is None.]","(BoundaryConditions.FieldData`. The default value is None.): A _Cursor")," specifying the table created from {ref}",Object(i.b)("inlineCode",{parentName:"p"},"BoundaryConditions.FieldData"),". The default value is None."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"crNodeSet"))),Object(i.b)("p",null,": A ",Object(i.b)("em",{parentName:"p"},"Cursor")," specifying the node set table created from {ref}",Object(i.b)("inlineCode",{parentName:"p"},"BoundaryConditions.FieldData"),". The default value is None.",Object(i.b)("em",{parentName:"p"},"[BoundaryConditions.FieldData`. The default value is None.]","(BoundaryConditions.FieldData`. The default value is None.): A _Cursor")," specifying the node set table created from {ref}",Object(i.b)("inlineCode",{parentName:"p"},"BoundaryConditions.FieldData"),". The default value is None."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"dPhase"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the phase value. The default value is DFLT_DBL.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"dDelay"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the delay value. The default value is DFLT_DBL.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"crPhaseTable"))),Object(i.b)("p",null,": A ",Object(i.b)("em",{parentName:"p"},"Cursor")," specifying the phase table created from {ref}",Object(i.b)("inlineCode",{parentName:"p"},"BoundaryConditions.FieldData"),". The default value is None.",Object(i.b)("em",{parentName:"p"},"[BoundaryConditions.FieldData`. The default value is None.]","(BoundaryConditions.FieldData`. The default value is None.): A _Cursor")," specifying the phase table created from {ref}",Object(i.b)("inlineCode",{parentName:"p"},"BoundaryConditions.FieldData"),". The default value is None."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"crlTarget"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor List")," specifying the target. This target can be Face, Edge or Node. The default value is [].")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"crEdit"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Cursor")," specifying an existing enforced load displacement setting. If this parameter is used, the specified enforced load displacement setting will be modified. If left None, a new enforced load displacement setting will be created. The default value is None.")),Object(i.b)("h2",{id:"return-code"},"Return Code"),Object(i.b)("p",null,"An ",Object(i.b)("em",{parentName:"p"},"String")," of 1 if succeeded, or 0 if failed."),Object(i.b)("h2",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'Geometry.Part.Cube()\n\nBoundaryConditions.EnforcedLoads.Displacement(strName="EnforcedDisplacement1", iDof=9, dDispUx=0.001, dDispRx=1.0, dPhase=0.0, dDelay=0.0, crlTarget=[Face(25)])\n')))}b.isMDXComponent=!0}}]);