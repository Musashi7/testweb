(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{1441:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return m}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var b=i.a.createContext({}),p=function(e){var n=i.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=p(e.components);return i.a.createElement(b.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},d=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),s=p(t),d=r,m=s["".concat(c,".").concat(d)]||s[d]||u[d]||o;return t?i.a.createElement(m,a(a({ref:n},b),{},{components:t})):i.a.createElement(m,a({ref:n},b))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,c=new Array(o);c[0]=d;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,c[1]=a;for(var b=2;b<o;b++)c[b]=t[b];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},81:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return a})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(3),i=t(7),o=(t(0),t(1441)),c={id:"Connections.Pretension.Advc",title:"Connections.Pretension.Advc()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Create pretension load on bolts for ADVC solver"},a={unversionedId:"psj-command/connections/Connections.Pretension.Advc",id:"psj-command/connections/Connections.Pretension.Advc",isDocsHomePage:!1,title:"Connections.Pretension.Advc()",description:"Create pretension load on bolts for ADVC solver",source:"@site/docs\\psj-command\\connections\\Connections.Pretension.Advc.md",slug:"/psj-command/connections/Connections.Pretension.Advc",permalink:"/testweb/docs/psj-command/connections/Connections.Pretension.Advc",version:"current",sidebar:"api",previous:{title:"Connections.Pretension.Abaqus()",permalink:"/testweb/docs/psj-command/connections/Connections.Pretension.Abaqus"},next:{title:"Connections.Pretension.General()",permalink:"/testweb/docs/psj-command/connections/Connections.Pretension.General"}},l=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],b={toc:l};function p(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"description"},"Description"),Object(o.b)("p",null,"This method creates the pretension load on bolts in the specified direction for the ADVC solver."),Object(o.b)("h2",{id:"syntax"},"Syntax"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'Connections.Pretension.Advc(strName="PreTensionAdvc1", bFixedLength=False, crEnforcedVelocity=None,\n    dForceValue=0.0, iDirectionUpdate=0, dlForceDirection=[0.0,0.0,0.0], dlControlNode=[0.0,0.0,0.0],\n    iRefNodeId=0, crLbcPretensionADVC=None, crlTargets=[])\n')),Object(o.b)("p",null,"Macro: {ref}",Object(o.b)("inlineCode",{parentName:"p"},"Macro-Connections-LbcPretensionAdvc")),Object(o.b)("p",null,"Ribbon: {menuselection}",Object(o.b)("inlineCode",{parentName:"p"},"Connections --\x3e Pretension --\x3e Advc")),Object(o.b)("h2",{id:"inputs"},"Inputs"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"strName")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"String")," specifying the name of pretension force."),Object(o.b)("li",{parentName:"ul"},'The default value is "PreTensionAdvc1".')),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"bFixedLength")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Boolean")," specified whether or not the tightening force of the bolt option are retained."),Object(o.b)("li",{parentName:"ul"},"The default value is ",Object(o.b)("em",{parentName:"li"},"False"),".")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"crEnforcedVelocity")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Cursor")," specifying the existing enforced velocity of the pretension force (ADVC) to be edited. This argument must be specified when ",Object(o.b)("em",{parentName:"li"},"crLbcPretensionADVC")," is specified."),Object(o.b)("li",{parentName:"ul"},"The default value is ",Object(o.b)("em",{parentName:"li"},"None"),".")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"dForceValue")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Double")," specifying the value of pretension force."),Object(o.b)("li",{parentName:"ul"},"The default value is 0.0.")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"iDirectionUpdate")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"An ",Object(o.b)("em",{parentName:"li"},"Integer")," specifying whether or not the tightening direction has been updated."),Object(o.b)("li",{parentName:"ul"},"If ",Object(o.b)("em",{parentName:"li"},"iDirectionUpdate=0"),", this argument is ignored."),Object(o.b)("li",{parentName:"ul"},"If ",Object(o.b)("em",{parentName:"li"},"iDirectionUpdate=1"),", update the tightening direction."),Object(o.b)("li",{parentName:"ul"},"If ",Object(o.b)("em",{parentName:"li"},"iDirectionUpdate=2"),", do not update the tightening direction."),Object(o.b)("li",{parentName:"ul"},"The default value is 0.")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"dlForceDirection")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Double List")," specifying the bolt tightening direction."),Object(o.b)("li",{parentName:"ul"},"The default value is ","[0.0,0.0,0.0]",".")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"dlControlNode")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Double List")," specifying the position of control node."),Object(o.b)("li",{parentName:"ul"},"The default value is ","[0.0,0.0,0.0]",".")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"iRefNodeId")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"An ",Object(o.b)("em",{parentName:"li"},"Integer")," specifying the ID of reference node."),Object(o.b)("li",{parentName:"ul"},"The default value is 0.")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"crLbcPretensionADVC")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"Cursor")," specifying an existing pretension force (ADVC). If no pretension force is specified, a new one will be created, otherwise, the specified pretension force (ADVC) will be modified."),Object(o.b)("li",{parentName:"ul"},"The default value is ",Object(o.b)("em",{parentName:"li"},"None"),".")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"crlTargets")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("em",{parentName:"li"},"List of Cursor")," specifying the list of targets. It can be faces or 1D elements."),Object(o.b)("li",{parentName:"ul"},"The default value is [].")),Object(o.b)("h2",{id:"return-code"},"Return Code"),Object(o.b)("p",null,"A ",Object(o.b)("em",{parentName:"p"},"String")," of 1 if success, or 0 if fail."),Object(o.b)("h2",{id:"sample-code"},"Sample Code"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),'Geometry.Part.Cylinder()\n\nGeometry.Part.Cylinder(dlOrigin=[0.0, 0.01, 0.0], strName="Cylinder_4", iPartCol=7697908)\n\nGeometry.DeleteEntity.Face(crlFace=[Face(9)])\n\nGeometry.MergeEntities.Parts(dTolerance=1e-05, crlPart=[Part(2, 1)])\n\nConnections.Pretension.Advc(bFixedLength=True, dForceValue=100.0, dlForceDirection=[0.0, -1.0, 0.0], dlControlNode=[0.0, 0.01, 0.0], iRefNodeId=725, crlTargets=[Face(3)])\n\n')))}p.isMDXComponent=!0}}]);