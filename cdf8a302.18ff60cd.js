(window.webpackJsonp=window.webpackJsonp||[]).push([[1066],{1145:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return d}));var r=n(3),i=n(7),a=(n(0),n(1441)),l={id:"Geometry.Edge.PerpendicularCylinderLine",title:"Geometry.Edge.PerpendicularCylinderLine()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Imprint the perpendicular line on face of Cylinder"},c={unversionedId:"psj-command/geometry/Geometry.Edge.PerpendicularCylinderLine",id:"psj-command/geometry/Geometry.Edge.PerpendicularCylinderLine",isDocsHomePage:!1,title:"Geometry.Edge.PerpendicularCylinderLine()",description:"Imprint the perpendicular line on face of Cylinder",source:"@site/docs\\psj-command\\geometry\\Geometry.Edge.PerpendicularCylinderLine.md",slug:"/psj-command/geometry/Geometry.Edge.PerpendicularCylinderLine",permalink:"/testweb/docs/psj-command/geometry/Geometry.Edge.PerpendicularCylinderLine",version:"current",sidebar:"api",previous:{title:"Geometry.Edge.OffsetLine()",permalink:"/testweb/docs/psj-command/geometry/Geometry.Edge.OffsetLine"},next:{title:"Geometry.Edge.PerpendicularLineOfEdge()",permalink:"/testweb/docs/psj-command/geometry/Geometry.Edge.PerpendicularLineOfEdge"}},o=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],p={toc:o};function d(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"description"},"Description"),Object(a.b)("h2",{id:"syntax"},"Syntax"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Geometry.Edge.PerpendicularCylinderLine(crlNode=[], crlFace=[], iMethod=0, dOffset=0.0, bOppositeSide=False, bBreakFace=True)\n")),Object(a.b)("p",null,"Macro: {ref}",Object(a.b)("inlineCode",{parentName:"p"},"Macro-Geometry-ImprintPerpendicularCylinderLineS")),Object(a.b)("p",null,"Ribbon: {menuselection}",Object(a.b)("inlineCode",{parentName:"p"},"Geometry --\x3e Edge --\x3e Perpendicular Cylinder Line")),Object(a.b)("h2",{id:"inputs"},"Inputs"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"crlNode")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A ",Object(a.b)("em",{parentName:"li"},"List of Cursor")," specifying the couple nodes, which the first node is the start node where the perpendicular line will be drawn, the second node is used to determine the offset direction (in case of user want to offset)."),Object(a.b)("li",{parentName:"ul"},"This is a required input.")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"crlFace")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A ",Object(a.b)("em",{parentName:"li"},"List of Cursor")," specifying the faces. The selected face could be curved surface or circular surface."),Object(a.b)("li",{parentName:"ul"},"This is a required input.")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"iMethod")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"An ",Object(a.b)("em",{parentName:"li"},"Integer")," specifying the Imprint method. The method will be represented by the value according to order of selection in the combobox method."),Object(a.b)("li",{parentName:"ul"},"If ",Object(a.b)("em",{parentName:"li"},"iMethod=0"),": Center Angle - The angle at the cylindrical center of a perpendicular position"),Object(a.b)("li",{parentName:"ul"},"If ",Object(a.b)("em",{parentName:"li"},"iMethod=1"),": Arc length - The distance on the circumference of a perpendicular position"),Object(a.b)("li",{parentName:"ul"},"The default value is 0.")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"dOffset")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A ",Object(a.b)("em",{parentName:"li"},"Double")," specifying the offset value. The offset value would be an angle degrees or length of an arc of a circle in millimeters, which is depended on selection method."),Object(a.b)("li",{parentName:"ul"},"The default value is 0.0.")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"bOppositeSide")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A ",Object(a.b)("em",{parentName:"li"},"Boolean")," specifying whether the opposite side option is checked or not. This argument will allow to imprint 2 lines in both side of selected face."),Object(a.b)("li",{parentName:"ul"},"If ",Object(a.b)("em",{parentName:"li"},"True"),", Jupiter will create 2 lines in both sides of the curved surface of the cylinder. In case of the selection face is a circular face, the imprinted line will continuously go through the center node and cut the edge at a node that opposites to the start node."),Object(a.b)("li",{parentName:"ul"},"If ",Object(a.b)("em",{parentName:"li"},"False"),", Jupiter will create only 1 line that defined by start node."),Object(a.b)("li",{parentName:"ul"},"The default value is ",Object(a.b)("em",{parentName:"li"},"False"),".")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"bBreakFace")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A ",Object(a.b)("em",{parentName:"li"},"Boolean")," specifying whether the breaking face option is checked or not."),Object(a.b)("li",{parentName:"ul"},"If ",Object(a.b)("em",{parentName:"li"},"True"),", Jupiter will break faces after imprinted the perpendicular line on the selected face."),Object(a.b)("li",{parentName:"ul"},"If ",Object(a.b)("em",{parentName:"li"},"False"),", Jupiter won't break the target face after imprinted the perpendicular line."),Object(a.b)("li",{parentName:"ul"},"The default value is ",Object(a.b)("em",{parentName:"li"},"True"),".")),Object(a.b)("h2",{id:"return-code"},"Return Code"),Object(a.b)("p",null,"An ",Object(a.b)("em",{parentName:"p"},"String")," of 1 if success, or 0 if failed."),Object(a.b)("h2",{id:"sample-code"},"Sample Code"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Geometry.Part.Cylinder(iPartCol=5093709)\n\nGeometry.Edge.PerpendicularCylinderLine(crlNode=[Node(19, 157)], crlFace=[Face(5)], dOffset=1.0, \n    bOppositeSide=True)\n\n\n")))}d.isMDXComponent=!0},1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),d=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=d(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},s=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(n),s=r,m=u["".concat(l,".").concat(s)]||u[s]||b[s]||a;return n?i.a.createElement(m,c(c({ref:t},p),{},{components:n})):i.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=s;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var p=2;p<a;p++)l[p]=n[p];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);