(window.webpackJsonp=window.webpackJsonp||[]).push([[443],{1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var i=n(0),r=n.n(i);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),b=l(n),d=i,m=b["".concat(c,".").concat(d)]||b[d]||u[d]||a;return n?r.a.createElement(m,o(o({ref:t},p),{},{components:n})):r.a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,c=new Array(a);c[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,c[1]=o;for(var p=2;p<a;p++)c[p]=n[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},519:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return l}));var i=n(3),r=n(7),a=(n(0),n(1441)),c={id:"JPT.GetEntitiesByAssociation",title:"JPT.GetEntitiesByAssociation()",author:"TechnoStar Co., Ltd.",author_url:"https://www.e-technostar.com/",description:"Get list of objects by associating from the inputted entity ID and its type"},o={unversionedId:"psj-utility/JPT.GetEntitiesByAssociation",id:"psj-utility/JPT.GetEntitiesByAssociation",isDocsHomePage:!1,title:"JPT.GetEntitiesByAssociation()",description:"Get list of objects by associating from the inputted entity ID and its type",source:"@site/docs\\psj-utility\\PSJ-Utility_GetEntitiesByAssociation.md",slug:"/psj-utility/JPT.GetEntitiesByAssociation",permalink:"/testweb/docs/psj-utility/JPT.GetEntitiesByAssociation",version:"current",sidebar:"api",previous:{title:"JPT.GetEntitiesByAdjacent()",permalink:"/testweb/docs/psj-utility/JPT.GetEntitiesByAdjacent"},next:{title:"JPT.GetEntitiesByID()",permalink:"/testweb/docs/psj-utility/JPT.GetEntitiesByID"}},s=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[{value:"<code>DItemVector</code>",id:"ditemvector",children:[]},{value:"<code>AssociateType</code>",id:"associatetype",children:[]},{value:"<code>entityID</code>",id:"entityid",children:[]}]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],p={toc:s};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"description"},"Description"),Object(a.b)("p",null,"Get ",Object(a.b)("em",{parentName:"p"},"list")," of objects by associating from the inputted entity ID and its type."),Object(a.b)("h2",{id:"syntax"},"Syntax"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python"}),"JPT.GetEntitiesByAssociation(DItemType, AssociateType, entityID)\n")),Object(a.b)("h2",{id:"inputs"},"Inputs"),Object(a.b)("h3",{id:"ditemvector"},Object(a.b)("inlineCode",{parentName:"h3"},"DItemVector")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("em",{parentName:"li"},Object(a.b)("a",Object(i.a)({parentName:"em"},{href:"DItemVector"}),"DItemVector"))," standing for a ",Object(a.b)("em",{parentName:"li"},"list")," of ",Object(a.b)("em",{parentName:"li"},Object(a.b)("a",Object(i.a)({parentName:"em"},{href:"./../data-type/psj-utility/built-in-types/DItem"}),"DItem"))," object in Jupiter."),Object(a.b)("li",{parentName:"ul"},"This is a required input.")),Object(a.b)("h3",{id:"associatetype"},Object(a.b)("inlineCode",{parentName:"h3"},"AssociateType")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("em",{parentName:"li"},Object(a.b)("a",Object(i.a)({parentName:"em"},{href:"AssociateType"}),"AssociateType"))," is an ",Object(a.b)("em",{parentName:"li"},"integer")," value standing for the association type in Jupiter."),Object(a.b)("li",{parentName:"ul"},"This is a required input.")),Object(a.b)("h3",{id:"entityid"},Object(a.b)("inlineCode",{parentName:"h3"},"entityID")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"An ",Object(a.b)("em",{parentName:"li"},"integer")," value standing for the ID of which is used as a starting entity."),Object(a.b)("li",{parentName:"ul"},"This is a required input.")),Object(a.b)("h2",{id:"return-code"},"Return Code"),Object(a.b)("p",null,"An ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",Object(i.a)({parentName:"em"},{href:"ItemVector"}),"ItemVector"))," standing for a ",Object(a.b)("em",{parentName:"p"},"list")," of ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",Object(i.a)({parentName:"em"},{href:"./../data-type/psj-utility/built-in-types/DItem"}),"DItem"))," object."),Object(a.b)("h2",{id:"sample-code"},"Sample Code"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python",metastring:"{0,5}","{0,5}":!0}),"# Create sample parts\nGeometry.Part.Cube()\n\n# Get all the associating faces existing on the part with ID = 1\nJPT.GetEntitiesByAssociation(JPT.DItemType.BODY, JPT.AssociateType.AS_FACE, 1)\n")))}l.isMDXComponent=!0}}]);