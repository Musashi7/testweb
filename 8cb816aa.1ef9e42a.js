(window.webpackJsonp=window.webpackJsonp||[]).push([[693],{1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),l=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,b=p(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,d=u["".concat(o,".").concat(m)]||u[m]||s[m]||c;return n?a.a.createElement(d,i(i({ref:t},b),{},{components:n})):a.a.createElement(d,i({ref:t},b))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var b=2;b<c;b++)o[b]=n[b];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},772:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return l}));var r=n(3),a=n(7),c=(n(0),n(1441)),o={id:"JPT.CastDItemToDFace",title:"JPT.CastDItemToDFace()",author:"TechnoStar Co., Ltd.",author_url:"https://www.e-technostar.com/",description:"Convert DItem object to DFace object"},i={unversionedId:"psj-utility/JPT.CastDItemToDFace",id:"psj-utility/JPT.CastDItemToDFace",isDocsHomePage:!1,title:"JPT.CastDItemToDFace()",description:"Convert DItem object to DFace object",source:"@site/docs\\psj-utility\\PSJ-Utility_CastDItemToDFace.md",slug:"/psj-utility/JPT.CastDItemToDFace",permalink:"/testweb/docs/psj-utility/JPT.CastDItemToDFace",version:"current",sidebar:"api",previous:{title:"JPT.CastDItemToDElem()",permalink:"/testweb/docs/psj-utility/JPT.CastDItemToDElem"},next:{title:"JPT.CastDItemToDGroup()",permalink:"/testweb/docs/psj-utility/JPT.CastDItemToDGroup"}},p=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[{value:"<code>ditemObject</code>",id:"ditemobject",children:[]}]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],b={toc:p};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"description"},"Description"),Object(c.b)("p",null,"CConvert ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"./../data-type/psj-utility/built-in-types/DItem"}),"DItem"))," object to ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"./../data-type/psj-utility/built-in-types/DFace"}),"DFace"))," object to get the information of the selected (Inputted) face(s)."),Object(c.b)("h2",{id:"syntax"},"Syntax"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"JPT.CastDItemToDFace(ditemObject)\n")),Object(c.b)("h2",{id:"inputs"},"Inputs"),Object(c.b)("h3",{id:"ditemobject"},Object(c.b)("inlineCode",{parentName:"h3"},"ditemObject")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"An object specifying Jupiter ",Object(c.b)("em",{parentName:"li"},Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"./../data-type/psj-utility/built-in-types/DItem"}),"DItem"))," type."),Object(c.b)("li",{parentName:"ul"},"This is a required input.")),Object(c.b)("h2",{id:"return-code"},"Return Code"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"./../data-type/psj-utility/built-in-types/DFace"}),"DFace"))," object (Face with relating information)."),Object(c.b)("h2",{id:"sample-code"},"Sample Code"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python",metastring:"{0,12}","{0,12}":!0}),'# Create sample parts\nGeometry.Part.Cube()\nGeometry.Part.Cube(strPartName="Cube_2")\nGeometry.Part.Cube(strPartName="Cube_3")\n\n# Select 1 object from the created DItem objects\nlistDItemObject = JPT.GetAllByType(JPT.DItemType.BODY)\nditemObject = listDItemObject[0]\nJPT.Debugger(ditemObject)\n\n# Convert from the above DItem object to DFace object\ndfaceObject = JPT.CastDItemToDFace(ditemObject)\n# Print all the related information of the created DFace object to the screen\nJPT.Debugger(dfaceObject)\n')))}l.isMDXComponent=!0}}]);