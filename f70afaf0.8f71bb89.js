(window.webpackJsonp=window.webpackJsonp||[]).push([[1299],{1378:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),i=(n(0),n(1441)),l={id:"Geometry.BreakEntity.Edge",title:"Geometry.BreakEntity.Edge()",author:"TechnoStar Co., Ltd.",authorURL:"https://www.e-technostar.com/",description:"Break Edge entity"},o={unversionedId:"psj-command/geometry/Geometry.BreakEntity.Edge",id:"psj-command/geometry/Geometry.BreakEntity.Edge",isDocsHomePage:!1,title:"Geometry.BreakEntity.Edge()",description:"Break Edge entity",source:"@site/docs\\psj-command\\geometry\\Geometry.BreakEntity.Edge.md",slug:"/psj-command/geometry/Geometry.BreakEntity.Edge",permalink:"/testweb/docs/psj-command/geometry/Geometry.BreakEntity.Edge",version:"current",sidebar:"api",previous:{title:"Geometry.BodyCut.XXYYOnOnePoint()",permalink:"/testweb/docs/psj-command/geometry/Geometry.BodyCut.XXYYOnOnePoint"},next:{title:"Geometry.BreakEntity.Face()",permalink:"/testweb/docs/psj-command/geometry/Geometry.BreakEntity.Face"}},c=[{value:"Description",id:"description",children:[]},{value:"Syntax",id:"syntax",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Return Code",id:"return-code",children:[]},{value:"Sample Code",id:"sample-code",children:[]}],b={toc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"This method partitions an edge into separate units at the given points or specified angle."),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Geometry.BreakEntity.Edge(crlPart=[], crlFace=[], crlEdge=[], crlNode=[], bAutoByAngle=False,\n    dEdgeAngle=60.0)\n")),Object(i.b)("p",null,"Macro: {ref}",Object(i.b)("inlineCode",{parentName:"p"},"Macro-Geometry-BreakEdgeCr")),Object(i.b)("p",null,"Ribbon: {menuselection}",Object(i.b)("inlineCode",{parentName:"p"},"Geometry --\x3e Break Entity --\x3e Edge")),Object(i.b)("h2",{id:"inputs"},"Inputs"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crlPart")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"List of Cursor")," specifying parts that the edges connecting to the faces will be divided. This option will only affect the functionality when ",Object(i.b)("em",{parentName:"li"},"bAutoByAngle=True"),"."),Object(i.b)("li",{parentName:"ul"},"The default value is [].")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crlFace")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"List of Cursor")," specifying faces that the edges connecting to the faces will be divided. This option will only affect the functionality when ",Object(i.b)("em",{parentName:"li"},"bAutoByAngle=True"),"."),Object(i.b)("li",{parentName:"ul"},"The default value is [].")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crlEdge")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"List of Cursor")," specifying edges that to be divided. This option will only affect the functionality when ",Object(i.b)("em",{parentName:"li"},"bAutoByAngle=True"),"."),Object(i.b)("li",{parentName:"ul"},"The default value is [].")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"crlNode")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"List of Cursor")," specifying nodes at which the edges will be divided. This option will only affect the functionality when ",Object(i.b)("em",{parentName:"li"},"bAutoByAngle=False"),"."),Object(i.b)("li",{parentName:"ul"},"The default value is [].")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"bAutoByAngle")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Boolean")," specifying whether to divide by edge angle."),Object(i.b)("li",{parentName:"ul"},"If ",Object(i.b)("em",{parentName:"li"},"True"),", edge will be divided at the position where its angle is not greater than the given ",Object(i.b)("em",{parentName:"li"},"dEdgeAngle"),"."),Object(i.b)("li",{parentName:"ul"},"The default value is ",Object(i.b)("em",{parentName:"li"},"False"),".")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"dEdgeAngle")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A ",Object(i.b)("em",{parentName:"li"},"Double")," specifying the angle in degrees between line segments. If ",Object(i.b)("em",{parentName:"li"},"bAutoByAngle")," is not specified, this argument is ignored."),Object(i.b)("li",{parentName:"ul"},"The default value is 60.0.")),Object(i.b)("h2",{id:"return-code"},"Return Code"),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"String")," of 1 if success, or 0 if fail."),Object(i.b)("h2",{id:"sample-code"},"Sample Code"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"Geometry.Part.Cube(iColorPart=6215639)\n\nGeometry.BreakEntity.Edge(crlNode=[Node(77, 84)])\n\n")))}p.isMDXComponent=!0},1441:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return s}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),p=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,s=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?a.a.createElement(s,o(o({ref:t},b),{},{components:n})):a.a.createElement(s,o({ref:t},b))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var b=2;b<i;b++)l[b]=n[b];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);